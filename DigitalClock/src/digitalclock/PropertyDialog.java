/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package digitalclock;

import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.JOptionPane;


/**
 *
 * @author macbook
 */
public class PropertyDialog extends java.awt.Dialog {

    private ClockSettings clockInfo=null;
    final int Init_Width =400;
    final int Init_Height =280;
    
    private ClockMainForm mainForm=null;
   
    /**
     * Creates new form PropertyDialog
     * @param parent
     * @param info
     */
    public PropertyDialog(ClockMainForm parent,ClockSettings info, boolean modal) {
        super(parent, modal);
        this.mainForm = parent;
        this.clockInfo=info;
        initComponents();
        this.initControls();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        btnCancel = new java.awt.Button();
        btnOk = new java.awt.Button();
        cmbFont = new java.awt.Choice();
        cmbForeColor = new java.awt.Choice();
        txtSize = new java.awt.TextField();
        cmbBackColor = new java.awt.Choice();
        chkBold = new java.awt.Checkbox();

        setBounds(new java.awt.Rectangle(0, 0, 300, 200));
        setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        setTitle("属性設定");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label1.setText("フォント");
        add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        label2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label2.setText("文字色");
        add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        label3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label3.setText("背景色");
        add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        label4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label4.setText("サイズ");
        add(label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        btnCancel.setLabel("閉じる");
        btnCancel.setName(""); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 100, -1));

        btnOk.setLabel("適用");
        btnOk.setName(""); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        add(btnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 100, -1));
        add(cmbFont, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 250, -1));

        cmbForeColor.setName(""); // NOI18N
        add(cmbForeColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 130, -1));
        add(txtSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 80, -1));
        add(cmbBackColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 130, -1));

        chkBold.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        chkBold.setLabel("太字");
        add(chkBold, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
       
         this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        //フォント
        try{
            String fontName=this.cmbFont.getSelectedItem();
            String foreColorNm = this.cmbForeColor.getSelectedItem();
            String backColorNm = this.cmbBackColor.getSelectedItem();
            String strSize = this.txtSize.getText();
            int size =Integer.parseInt(strSize);
            this.clockInfo.backColor= NamedColor.valueOf(backColorNm);
            this.clockInfo.color=NamedColor.valueOf(foreColorNm);
            this.clockInfo.fontName=fontName;
            this.clockInfo.fontSize=size;
            this.clockInfo.Bold = this.chkBold.getState();
            this.mainForm.setInfo=this.clockInfo.clone();
            this.mainForm.resetWindowSize();
            this.mainForm.repaint();
           // this.setVisible(false);
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this.btnOk, "サイズの入力が不正です");
        }
    }//GEN-LAST:event_btnOkActionPerformed

    
    ClockSettings getClockInfo(){
        return this.clockInfo;
    };
    
    void initControls(){
        //font一覧
      
       Font[] fonts= GraphicsEnvironment.getLocalGraphicsEnvironment().getAllFonts();
       for(Font font:fonts){
           String fontName = font.getName();
          this.cmbFont.addItem(fontName);
          if(fontName.equals(this.clockInfo.fontName)){
              this.cmbFont.select(fontName);
          }
       }
       //色一覧
      for(NamedColor color : NamedColor.values()){
          this.cmbForeColor.add(color.name());
          this.cmbBackColor.add(color.name());
          if(color.equals(this.clockInfo.color)){
              this.cmbForeColor.select(color.name());
          }
          if(color.equals(this.clockInfo.backColor)){
              this.cmbBackColor.select(color.name());
          }
      }
      this.chkBold.setState(this.clockInfo.Bold);
      //フォントサイズ
      this.txtSize.setText(Integer.toString(this.clockInfo.fontSize));
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnCancel;
    private java.awt.Button btnOk;
    private java.awt.Checkbox chkBold;
    private java.awt.Choice cmbBackColor;
    private java.awt.Choice cmbFont;
    private java.awt.Choice cmbForeColor;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.TextField txtSize;
    // End of variables declaration//GEN-END:variables
}
