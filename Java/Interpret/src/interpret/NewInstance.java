/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interpret;

import java.awt.*;
import java.lang.reflect.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.*;

/**
 *
 * @author xma
 */
public class NewInstance extends javax.swing.JDialog {

    private Class<?> instanceType;
    private Constructor<?>  constructor;
    private Object createdObject;
    private boolean canceled=true;
 
    /**
     * Creates new form NewInstance
     */
    public NewInstance(Window owner,Class<?> type, Constructor<?> constructor) {
        super(owner, type.getName() + "のインスタンス作成", ModalityType.APPLICATION_MODAL);
        this.instanceType = type;
        this.constructor=constructor;
        initComponents();
        this.InitControls();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        instanceNamePanel = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(1024, 30));
        jToolBar1.setMinimumSize(new java.awt.Dimension(400, 25));
        jToolBar1.setPreferredSize(new java.awt.Dimension(400, 30));

        jPanel1.setPreferredSize(new java.awt.Dimension(398, 25));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 2, 2));

        btnOk.setText("OK");
        btnOk.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnOk.setMaximumSize(new java.awt.Dimension(90, 22));
        btnOk.setMinimumSize(new java.awt.Dimension(90, 22));
        btnOk.setPreferredSize(new java.awt.Dimension(90, 22));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        jPanel1.add(btnOk);

        btnCancel.setText("キャンセル");
        btnCancel.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnCancel.setMaximumSize(new java.awt.Dimension(90, 22));
        btnCancel.setMinimumSize(new java.awt.Dimension(90, 22));
        btnCancel.setPreferredSize(new java.awt.Dimension(90, 22));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);

        jToolBar1.add(jPanel1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(CreateTableModel());
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setRowHeight(24);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        instanceNamePanel.setPreferredSize(new java.awt.Dimension(400, 25));
        instanceNamePanel.setLayout(new java.awt.BorderLayout());

        lblName.setText("名前：");
        lblName.setMaximumSize(new java.awt.Dimension(30, 24));
        lblName.setMinimumSize(new java.awt.Dimension(30, 24));
        lblName.setPreferredSize(new java.awt.Dimension(50, 24));
        instanceNamePanel.add(lblName, java.awt.BorderLayout.WEST);
        instanceNamePanel.add(jTextField1, java.awt.BorderLayout.CENTER);

        jPanel2.add(instanceNamePanel, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        try {
             jTable1.editingStopped(new ChangeEvent(jTable1));
            if (constructor == null) {
                this.createdObject=this.instanceType.newInstance();
            } else {
                if(!this.constructor.isAccessible()){
                    this.constructor.setAccessible(true);
                }
                TableModel model =this.jTable1.getModel();
                int row = model.getRowCount();
                Object[] params =new Object[row];
                for(int i=0;i<row;i++){
                   params[i]= model.getValueAt(i, 2);
                }
                this.createdObject=this.constructor.newInstance(params);
            }
            canceled=false;
            this.setVisible(false);
        } catch (InstantiationException ex) {
            JOptionPane.showMessageDialog(this,ex.toString());
        } catch (IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this,ex.toString());
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this,ex.toString());
        } catch (InvocationTargetException ex) {
           JOptionPane.showMessageDialog(this,ex.toString());
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.canceled=true;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JPanel instanceNamePanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables
   
    public Class<?> getInstanceType() {
        return instanceType;
    }

    public void setInstanceType(Class<?> instanceType) {
        this.instanceType = instanceType;
    }
    
    private void InitControls(){
     // this.jTable1.setModel(CreateTableModel());
        if (this.jTable1.getColumnModel().getColumnCount() >= 2) {
            jTable1.getColumnModel().getColumn(1).setCellRenderer(new TypeCellRender());
            jTable1.getColumnModel().getColumn(2).setCellEditor(getTableCellEditor());
            jTable1.getColumnModel().getColumn(2).setCellRenderer(new TypeCellRender());
        }
    }
    
    private DefaultTableModel CreateTableModel(){
       int rowCount = this.constructor.getParameterCount();
       Object[][] modelDatas =new Object[rowCount][3];
       Parameter[] params =  this.constructor.getParameters();
       for(int row=0;row<rowCount;row++ ){
           modelDatas[row][0]=params[row].getName();
           modelDatas[row][1]=params[row].getType();
           modelDatas[row][2]=null;
       }
       String[] columns ={ "引数", "型", "値"};
       DefaultTableModel model=new DefaultTableModel(modelDatas, columns){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        return model;
    }
    
    private TableCellEditor getTableCellEditor(){
      return new TypeCellEditor();
    }

    /**
     * @return the canceled
     */
    public boolean isCanceled() {
        return this.canceled;
    }

    /**
     * @return the createdObject
     */
    public Object getCreatedObject() {
        return createdObject;
    }

    public String getInstanceName() {
        return this.jTextField1.getText();
    }

    public void setInstanceName(String instanceName) {
        this.jTextField1.setText(instanceName);
    }
  
    public void showNameInputArea(boolean show){
        this.instanceNamePanel.setVisible(show);
    }
    
}

