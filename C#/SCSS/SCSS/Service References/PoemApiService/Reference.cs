//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maxz.PoemSystem.Tools.PoemApiService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoemItem", Namespace="http://schemas.datacontract.org/2004/07/PoemWebService.Entity")]
    [System.SerializableAttribute()]
    public partial class PoemItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CipaiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DynastyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FooterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YunField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cipai {
            get {
                return this.CipaiField;
            }
            set {
                if ((object.ReferenceEquals(this.CipaiField, value) != true)) {
                    this.CipaiField = value;
                    this.RaisePropertyChanged("Cipai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dynasty {
            get {
                return this.DynastyField;
            }
            set {
                if ((object.ReferenceEquals(this.DynastyField, value) != true)) {
                    this.DynastyField = value;
                    this.RaisePropertyChanged("Dynasty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Footer {
            get {
                return this.FooterField;
            }
            set {
                if ((object.ReferenceEquals(this.FooterField, value) != true)) {
                    this.FooterField = value;
                    this.RaisePropertyChanged("Footer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Html {
            get {
                return this.HtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.HtmlField, value) != true)) {
                    this.HtmlField = value;
                    this.RaisePropertyChanged("Html");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubID {
            get {
                return this.SubIDField;
            }
            set {
                if ((this.SubIDField.Equals(value) != true)) {
                    this.SubIDField = value;
                    this.RaisePropertyChanged("SubID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleNode {
            get {
                return this.TitleNodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleNodeField, value) != true)) {
                    this.TitleNodeField = value;
                    this.RaisePropertyChanged("TitleNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Yun {
            get {
                return this.YunField;
            }
            set {
                if ((object.ReferenceEquals(this.YunField, value) != true)) {
                    this.YunField = value;
                    this.RaisePropertyChanged("Yun");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="PoemApiService.IPoemApi")]
    public interface IPoemApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IPoemApi/DoWork", ReplyAction="urn:IPoemApi/DoWorkResponse")]
        Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse DoWork(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IPoemApi/DoWork", ReplyAction="urn:IPoemApi/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request, System.AsyncCallback callback, object asyncState);
        
        Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IPoemApi/QueryPoem", ReplyAction="urn:IPoemApi/QueryPoemResponse")]
        Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse QueryPoem(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IPoemApi/QueryPoem", ReplyAction="urn:IPoemApi/QueryPoemResponse")]
        System.IAsyncResult BeginQueryPoem(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request, System.AsyncCallback callback, object asyncState);
        
        Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse EndQueryPoem(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoWork", WrapperNamespace="", IsWrapped=true)]
    public partial class DoWorkRequest {
        
        public DoWorkRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoWorkResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class DoWorkResponse {
        
        public DoWorkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryPoem", WrapperNamespace="", IsWrapped=true)]
    public partial class QueryPoemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string key;
        
        public QueryPoemRequest() {
        }
        
        public QueryPoemRequest(string key) {
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryPoemResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class QueryPoemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public System.Collections.Generic.List<Maxz.PoemSystem.Tools.PoemApiService.PoemItem> QueryPoemResult;
        
        public QueryPoemResponse() {
        }
        
        public QueryPoemResponse(System.Collections.Generic.List<Maxz.PoemSystem.Tools.PoemApiService.PoemItem> QueryPoemResult) {
            this.QueryPoemResult = QueryPoemResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPoemApiChannel : Maxz.PoemSystem.Tools.PoemApiService.IPoemApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryPoemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryPoemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PoemApiClient : System.ServiceModel.ClientBase<Maxz.PoemSystem.Tools.PoemApiService.IPoemApi>, Maxz.PoemSystem.Tools.PoemApiService.IPoemApi {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryPoemDelegate;
        
        private EndOperationDelegate onEndQueryPoemDelegate;
        
        private System.Threading.SendOrPostCallback onQueryPoemCompletedDelegate;
        
        public PoemApiClient() {
        }
        
        public PoemApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PoemApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoemApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoemApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DoWorkCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<QueryPoemCompletedEventArgs> QueryPoemCompleted;
        
        public Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse DoWork(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request) {
            return base.Channel.DoWork(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoWork(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse EndDoWork(System.IAsyncResult result) {
            return base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request = ((Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest)(inValues[0]));
            return this.BeginDoWork(request, callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            Maxz.PoemSystem.Tools.PoemApiService.DoWorkResponse retVal = this.EndDoWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new DoWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request) {
            this.DoWorkAsync(request, null);
        }
        
        public void DoWorkAsync(Maxz.PoemSystem.Tools.PoemApiService.DoWorkRequest request, object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, new object[] {
                        request}, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        public Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse QueryPoem(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request) {
            return base.Channel.QueryPoem(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryPoem(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryPoem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse EndQueryPoem(System.IAsyncResult result) {
            return base.Channel.EndQueryPoem(result);
        }
        
        private System.IAsyncResult OnBeginQueryPoem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request = ((Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest)(inValues[0]));
            return this.BeginQueryPoem(request, callback, asyncState);
        }
        
        private object[] OnEndQueryPoem(System.IAsyncResult result) {
            Maxz.PoemSystem.Tools.PoemApiService.QueryPoemResponse retVal = this.EndQueryPoem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryPoemCompleted(object state) {
            if ((this.QueryPoemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryPoemCompleted(this, new QueryPoemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryPoemAsync(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request) {
            this.QueryPoemAsync(request, null);
        }
        
        public void QueryPoemAsync(Maxz.PoemSystem.Tools.PoemApiService.QueryPoemRequest request, object userState) {
            if ((this.onBeginQueryPoemDelegate == null)) {
                this.onBeginQueryPoemDelegate = new BeginOperationDelegate(this.OnBeginQueryPoem);
            }
            if ((this.onEndQueryPoemDelegate == null)) {
                this.onEndQueryPoemDelegate = new EndOperationDelegate(this.OnEndQueryPoem);
            }
            if ((this.onQueryPoemCompletedDelegate == null)) {
                this.onQueryPoemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryPoemCompleted);
            }
            base.InvokeAsync(this.onBeginQueryPoemDelegate, new object[] {
                        request}, this.onEndQueryPoemDelegate, this.onQueryPoemCompletedDelegate, userState);
        }
    }
}
