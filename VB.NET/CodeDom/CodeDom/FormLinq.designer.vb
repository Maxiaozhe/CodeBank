'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="RabitFlow_410")>  _
Partial Public Class FormLinqDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "拡張メソッドの定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertENVC0001(instance As ENVC0001)
    End Sub
  Partial Private Sub UpdateENVC0001(instance As ENVC0001)
    End Sub
  Partial Private Sub DeleteENVC0001(instance As ENVC0001)
    End Sub
  Partial Private Sub InsertFRMC1000(instance As FRMC1000)
    End Sub
  Partial Private Sub UpdateFRMC1000(instance As FRMC1000)
    End Sub
  Partial Private Sub DeleteFRMC1000(instance As FRMC1000)
    End Sub
  Partial Private Sub InsertFRMF1000(instance As FRMF1000)
    End Sub
  Partial Private Sub UpdateFRMF1000(instance As FRMF1000)
    End Sub
  Partial Private Sub DeleteFRMF1000(instance As FRMF1000)
    End Sub
  Partial Private Sub InsertFRMF1020(instance As FRMF1020)
    End Sub
  Partial Private Sub UpdateFRMF1020(instance As FRMF1020)
    End Sub
  Partial Private Sub DeleteFRMF1020(instance As FRMF1020)
    End Sub
  Partial Private Sub InsertFRMI1001(instance As FRMI1001)
    End Sub
  Partial Private Sub UpdateFRMI1001(instance As FRMI1001)
    End Sub
  Partial Private Sub DeleteFRMI1001(instance As FRMI1001)
    End Sub
  Partial Private Sub InsertFRMI1000(instance As FRMI1000)
    End Sub
  Partial Private Sub UpdateFRMI1000(instance As FRMI1000)
    End Sub
  Partial Private Sub DeleteFRMI1000(instance As FRMI1000)
    End Sub
  Partial Private Sub InsertFRMG1000(instance As FRMG1000)
    End Sub
  Partial Private Sub UpdateFRMG1000(instance As FRMG1000)
    End Sub
  Partial Private Sub DeleteFRMG1000(instance As FRMG1000)
    End Sub
  Partial Private Sub InsertFRMG1001(instance As FRMG1001)
    End Sub
  Partial Private Sub UpdateFRMG1001(instance As FRMG1001)
    End Sub
  Partial Private Sub DeleteFRMG1001(instance As FRMG1001)
    End Sub
  Partial Private Sub InsertFRMG1002(instance As FRMG1002)
    End Sub
  Partial Private Sub UpdateFRMG1002(instance As FRMG1002)
    End Sub
  Partial Private Sub DeleteFRMG1002(instance As FRMG1002)
    End Sub
  Partial Private Sub InsertFRMG1003(instance As FRMG1003)
    End Sub
  Partial Private Sub UpdateFRMG1003(instance As FRMG1003)
    End Sub
  Partial Private Sub DeleteFRMG1003(instance As FRMG1003)
    End Sub
  Partial Private Sub InsertFRMG1004(instance As FRMG1004)
    End Sub
  Partial Private Sub UpdateFRMG1004(instance As FRMG1004)
    End Sub
  Partial Private Sub DeleteFRMG1004(instance As FRMG1004)
    End Sub
  Partial Private Sub InsertFRMG1005(instance As FRMG1005)
    End Sub
  Partial Private Sub UpdateFRMG1005(instance As FRMG1005)
    End Sub
  Partial Private Sub DeleteFRMG1005(instance As FRMG1005)
    End Sub
  Partial Private Sub InsertFRMG1010(instance As FRMG1010)
    End Sub
  Partial Private Sub UpdateFRMG1010(instance As FRMG1010)
    End Sub
  Partial Private Sub DeleteFRMG1010(instance As FRMG1010)
    End Sub
  Partial Private Sub InsertFRMH0001(instance As FRMH0001)
    End Sub
  Partial Private Sub UpdateFRMH0001(instance As FRMH0001)
    End Sub
  Partial Private Sub DeleteFRMH0001(instance As FRMH0001)
    End Sub
  Partial Private Sub InsertFRMH0002(instance As FRMH0002)
    End Sub
  Partial Private Sub UpdateFRMH0002(instance As FRMH0002)
    End Sub
  Partial Private Sub DeleteFRMH0002(instance As FRMH0002)
    End Sub
  Partial Private Sub InsertFRMS0001(instance As FRMS0001)
    End Sub
  Partial Private Sub UpdateFRMS0001(instance As FRMS0001)
    End Sub
  Partial Private Sub DeleteFRMS0001(instance As FRMS0001)
    End Sub
  Partial Private Sub InsertEGGA0007(instance As EGGA0007)
    End Sub
  Partial Private Sub UpdateEGGA0007(instance As EGGA0007)
    End Sub
  Partial Private Sub DeleteEGGA0007(instance As EGGA0007)
    End Sub
  Partial Private Sub InsertEGGA0007EX(instance As EGGA0007EX)
    End Sub
  Partial Private Sub UpdateEGGA0007EX(instance As EGGA0007EX)
    End Sub
  Partial Private Sub DeleteEGGA0007EX(instance As EGGA0007EX)
    End Sub
  Partial Private Sub InsertEGGA0013(instance As EGGA0013)
    End Sub
  Partial Private Sub UpdateEGGA0013(instance As EGGA0013)
    End Sub
  Partial Private Sub DeleteEGGA0013(instance As EGGA0013)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.NewFeatureTest.My.MySettings.Default.RabitFlow_410ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ENVC0001() As System.Data.Linq.Table(Of ENVC0001)
		Get
			Return Me.GetTable(Of ENVC0001)
		End Get
	End Property
	
	Public ReadOnly Property FRMC1000() As System.Data.Linq.Table(Of FRMC1000)
		Get
			Return Me.GetTable(Of FRMC1000)
		End Get
	End Property
	
	Public ReadOnly Property FRMF1000() As System.Data.Linq.Table(Of FRMF1000)
		Get
			Return Me.GetTable(Of FRMF1000)
		End Get
	End Property
	
	Public ReadOnly Property FRMF1020() As System.Data.Linq.Table(Of FRMF1020)
		Get
			Return Me.GetTable(Of FRMF1020)
		End Get
	End Property
	
	Public ReadOnly Property FRMI1001() As System.Data.Linq.Table(Of FRMI1001)
		Get
			Return Me.GetTable(Of FRMI1001)
		End Get
	End Property
	
	Public ReadOnly Property FRMI1000() As System.Data.Linq.Table(Of FRMI1000)
		Get
			Return Me.GetTable(Of FRMI1000)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1000() As System.Data.Linq.Table(Of FRMG1000)
		Get
			Return Me.GetTable(Of FRMG1000)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1001() As System.Data.Linq.Table(Of FRMG1001)
		Get
			Return Me.GetTable(Of FRMG1001)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1002() As System.Data.Linq.Table(Of FRMG1002)
		Get
			Return Me.GetTable(Of FRMG1002)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1003() As System.Data.Linq.Table(Of FRMG1003)
		Get
			Return Me.GetTable(Of FRMG1003)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1004() As System.Data.Linq.Table(Of FRMG1004)
		Get
			Return Me.GetTable(Of FRMG1004)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1005() As System.Data.Linq.Table(Of FRMG1005)
		Get
			Return Me.GetTable(Of FRMG1005)
		End Get
	End Property
	
	Public ReadOnly Property FRMG1010() As System.Data.Linq.Table(Of FRMG1010)
		Get
			Return Me.GetTable(Of FRMG1010)
		End Get
	End Property
	
	Public ReadOnly Property FRMH0001() As System.Data.Linq.Table(Of FRMH0001)
		Get
			Return Me.GetTable(Of FRMH0001)
		End Get
	End Property
	
	Public ReadOnly Property FRMH0002() As System.Data.Linq.Table(Of FRMH0002)
		Get
			Return Me.GetTable(Of FRMH0002)
		End Get
	End Property
	
	Public ReadOnly Property FRMS0001() As System.Data.Linq.Table(Of FRMS0001)
		Get
			Return Me.GetTable(Of FRMS0001)
		End Get
	End Property
	
	Public ReadOnly Property EGGA0007() As System.Data.Linq.Table(Of EGGA0007)
		Get
			Return Me.GetTable(Of EGGA0007)
		End Get
	End Property
	
	Public ReadOnly Property EGGA0007EX() As System.Data.Linq.Table(Of EGGA0007EX)
		Get
			Return Me.GetTable(Of EGGA0007EX)
		End Get
	End Property
	
	Public ReadOnly Property EGGA0013() As System.Data.Linq.Table(Of EGGA0013)
		Get
			Return Me.GetTable(Of EGGA0013)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ENVC0001")>  _
Partial Public Class ENVC0001
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCTG As Integer
	
	Private _NMCTG As String
	
	Private _TPCLASS As Integer
	
	Private _NOINDI As System.Nullable(Of Integer)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _TPZENKAKU As System.Nullable(Of Integer)
	
	Private _TPORGA As System.Nullable(Of Integer)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _FRMC1000 As EntityRef(Of FRMC1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCTGChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCTGChanged()
    End Sub
    Partial Private Sub OnNMCTGChanging(value As String)
    End Sub
    Partial Private Sub OnNMCTGChanged()
    End Sub
    Partial Private Sub OnTPCLASSChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPCLASSChanged()
    End Sub
    Partial Private Sub OnNOINDIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNOINDIChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnTPZENKAKUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPZENKAKUChanged()
    End Sub
    Partial Private Sub OnTPORGAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPORGAChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMC1000 = CType(Nothing, EntityRef(Of FRMC1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCTG", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDCTG() As Integer
		Get
			Return Me._IDCTG
		End Get
		Set
			If ((Me._IDCTG = value)  _
						= false) Then
				Me.OnIDCTGChanging(value)
				Me.SendPropertyChanging
				Me._IDCTG = value
				Me.SendPropertyChanged("IDCTG")
				Me.OnIDCTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMCTG", DbType:="NVarChar(40)")>  _
	Public Property NMCTG() As String
		Get
			Return Me._NMCTG
		End Get
		Set
			If (String.Equals(Me._NMCTG, value) = false) Then
				Me.OnNMCTGChanging(value)
				Me.SendPropertyChanging
				Me._NMCTG = value
				Me.SendPropertyChanged("NMCTG")
				Me.OnNMCTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPCLASS", DbType:="Int NOT NULL")>  _
	Public Property TPCLASS() As Integer
		Get
			Return Me._TPCLASS
		End Get
		Set
			If ((Me._TPCLASS = value)  _
						= false) Then
				Me.OnTPCLASSChanging(value)
				Me.SendPropertyChanging
				Me._TPCLASS = value
				Me.SendPropertyChanged("TPCLASS")
				Me.OnTPCLASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOINDI", DbType:="Int")>  _
	Public Property NOINDI() As System.Nullable(Of Integer)
		Get
			Return Me._NOINDI
		End Get
		Set
			If (Me._NOINDI.Equals(value) = false) Then
				Me.OnNOINDIChanging(value)
				Me.SendPropertyChanging
				Me._NOINDI = value
				Me.SendPropertyChanged("NOINDI")
				Me.OnNOINDIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPZENKAKU", DbType:="Int")>  _
	Public Property TPZENKAKU() As System.Nullable(Of Integer)
		Get
			Return Me._TPZENKAKU
		End Get
		Set
			If (Me._TPZENKAKU.Equals(value) = false) Then
				Me.OnTPZENKAKUChanging(value)
				Me.SendPropertyChanging
				Me._TPZENKAKU = value
				Me.SendPropertyChanged("TPZENKAKU")
				Me.OnTPZENKAKUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPORGA", DbType:="Int")>  _
	Public Property TPORGA() As System.Nullable(Of Integer)
		Get
			Return Me._TPORGA
		End Get
		Set
			If (Me._TPORGA.Equals(value) = false) Then
				Me.OnTPORGAChanging(value)
				Me.SendPropertyChanging
				Me._TPORGA = value
				Me.SendPropertyChanged("TPORGA")
				Me.OnTPORGAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ENVC0001_FRMC1000", Storage:="_FRMC1000", ThisKey:="IDCTG", OtherKey:="IDCTG", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property FRMC1000() As FRMC1000
		Get
			Return Me._FRMC1000.Entity
		End Get
		Set
			Dim previousValue As FRMC1000 = Me._FRMC1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMC1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMC1000.Entity = Nothing
					previousValue.ENVC0001 = Nothing
				End If
				Me._FRMC1000.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.ENVC0001 = Me
				End If
				Me.SendPropertyChanged("FRMC1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMC1000")>  _
Partial Public Class FRMC1000
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCTG As Integer
	
	Private _IDFRM As Integer
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _FRMF1000 As EntitySet(Of FRMF1000)
	
	Private _ENVC0001 As EntityRef(Of ENVC0001)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCTGChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCTGChanged()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = New EntitySet(Of FRMF1000)(AddressOf Me.attach_FRMF1000, AddressOf Me.detach_FRMF1000)
		Me._ENVC0001 = CType(Nothing, EntityRef(Of ENVC0001))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCTG", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDCTG() As Integer
		Get
			Return Me._IDCTG
		End Get
		Set
			If ((Me._IDCTG = value)  _
						= false) Then
				If Me._ENVC0001.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDCTGChanging(value)
				Me.SendPropertyChanging
				Me._IDCTG = value
				Me.SendPropertyChanged("IDCTG")
				Me.OnIDCTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMC1000_FRMF1000", Storage:="_FRMF1000", ThisKey:="IDCTG", OtherKey:="IDCTG")>  _
	Public Property FRMF1000() As EntitySet(Of FRMF1000)
		Get
			Return Me._FRMF1000
		End Get
		Set
			Me._FRMF1000.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ENVC0001_FRMC1000", Storage:="_ENVC0001", ThisKey:="IDCTG", OtherKey:="IDCTG", IsForeignKey:=true)>  _
	Public Property ENVC0001() As ENVC0001
		Get
			Return Me._ENVC0001.Entity
		End Get
		Set
			Dim previousValue As ENVC0001 = Me._ENVC0001.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ENVC0001.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ENVC0001.Entity = Nothing
					previousValue.FRMC1000 = Nothing
				End If
				Me._ENVC0001.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMC1000 = Me
					Me._IDCTG = value.IDCTG
				Else
					Me._IDCTG = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("ENVC0001")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FRMF1000(ByVal entity As FRMF1000)
		Me.SendPropertyChanging
		entity.FRMC1000 = Me
	End Sub
	
	Private Sub detach_FRMF1000(ByVal entity As FRMF1000)
		Me.SendPropertyChanging
		entity.FRMC1000 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMF1000")>  _
Partial Public Class FRMF1000
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _NMFRM As String
	
	Private _IDCTG As System.Nullable(Of Integer)
	
	Private _NMSYSTBL As String
	
	Private _PTFRMPG As String
	
	Private _STFRMPG As String
	
	Private _STFORMSIZE As String
	
	Private _STFLDIDX As String
	
	Private _FGEDT As System.Nullable(Of Char)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _NOFRMLEVEL As System.Nullable(Of Integer)
	
	Private _FGREPORT As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _IDFRMKIND As System.Nullable(Of Integer)
	
	Private _FRMF1020 As EntityRef(Of FRMF1020)
	
	Private _FRMI1001 As EntitySet(Of FRMI1001)
	
	Private _FRMH0001 As EntityRef(Of FRMH0001)
	
	Private _FRMS0001 As EntitySet(Of FRMS0001)
	
	Private _EGGA0007 As EntityRef(Of EGGA0007)
	
	Private _EGGA0007EX As EntityRef(Of EGGA0007EX)
	
	Private _EGGA0013 As EntityRef(Of EGGA0013)
	
	Private _FRMC1000 As EntityRef(Of FRMC1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnNMFRMChanging(value As String)
    End Sub
    Partial Private Sub OnNMFRMChanged()
    End Sub
    Partial Private Sub OnIDCTGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCTGChanged()
    End Sub
    Partial Private Sub OnNMSYSTBLChanging(value As String)
    End Sub
    Partial Private Sub OnNMSYSTBLChanged()
    End Sub
    Partial Private Sub OnPTFRMPGChanging(value As String)
    End Sub
    Partial Private Sub OnPTFRMPGChanged()
    End Sub
    Partial Private Sub OnSTFRMPGChanging(value As String)
    End Sub
    Partial Private Sub OnSTFRMPGChanged()
    End Sub
    Partial Private Sub OnSTFORMSIZEChanging(value As String)
    End Sub
    Partial Private Sub OnSTFORMSIZEChanged()
    End Sub
    Partial Private Sub OnSTFLDIDXChanging(value As String)
    End Sub
    Partial Private Sub OnSTFLDIDXChanged()
    End Sub
    Partial Private Sub OnFGEDTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGEDTChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnNOFRMLEVELChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNOFRMLEVELChanged()
    End Sub
    Partial Private Sub OnFGREPORTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGREPORTChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    Partial Private Sub OnIDFRMKINDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDFRMKINDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1020 = CType(Nothing, EntityRef(Of FRMF1020))
		Me._FRMI1001 = New EntitySet(Of FRMI1001)(AddressOf Me.attach_FRMI1001, AddressOf Me.detach_FRMI1001)
		Me._FRMH0001 = CType(Nothing, EntityRef(Of FRMH0001))
		Me._FRMS0001 = New EntitySet(Of FRMS0001)(AddressOf Me.attach_FRMS0001, AddressOf Me.detach_FRMS0001)
		Me._EGGA0007 = CType(Nothing, EntityRef(Of EGGA0007))
		Me._EGGA0007EX = CType(Nothing, EntityRef(Of EGGA0007EX))
		Me._EGGA0013 = CType(Nothing, EntityRef(Of EGGA0013))
		Me._FRMC1000 = CType(Nothing, EntityRef(Of FRMC1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMFRM", DbType:="NVarChar(40)")>  _
	Public Property NMFRM() As String
		Get
			Return Me._NMFRM
		End Get
		Set
			If (String.Equals(Me._NMFRM, value) = false) Then
				Me.OnNMFRMChanging(value)
				Me.SendPropertyChanging
				Me._NMFRM = value
				Me.SendPropertyChanged("NMFRM")
				Me.OnNMFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCTG", DbType:="Int")>  _
	Public Property IDCTG() As System.Nullable(Of Integer)
		Get
			Return Me._IDCTG
		End Get
		Set
			If (Me._IDCTG.Equals(value) = false) Then
				If Me._FRMC1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDCTGChanging(value)
				Me.SendPropertyChanging
				Me._IDCTG = value
				Me.SendPropertyChanged("IDCTG")
				Me.OnIDCTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMSYSTBL", DbType:="NVarChar(8)")>  _
	Public Property NMSYSTBL() As String
		Get
			Return Me._NMSYSTBL
		End Get
		Set
			If (String.Equals(Me._NMSYSTBL, value) = false) Then
				Me.OnNMSYSTBLChanging(value)
				Me.SendPropertyChanging
				Me._NMSYSTBL = value
				Me.SendPropertyChanged("NMSYSTBL")
				Me.OnNMSYSTBLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PTFRMPG", DbType:="NVarChar(256)")>  _
	Public Property PTFRMPG() As String
		Get
			Return Me._PTFRMPG
		End Get
		Set
			If (String.Equals(Me._PTFRMPG, value) = false) Then
				Me.OnPTFRMPGChanging(value)
				Me.SendPropertyChanging
				Me._PTFRMPG = value
				Me.SendPropertyChanged("PTFRMPG")
				Me.OnPTFRMPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STFRMPG", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STFRMPG() As String
		Get
			Return Me._STFRMPG
		End Get
		Set
			If (String.Equals(Me._STFRMPG, value) = false) Then
				Me.OnSTFRMPGChanging(value)
				Me.SendPropertyChanging
				Me._STFRMPG = value
				Me.SendPropertyChanged("STFRMPG")
				Me.OnSTFRMPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STFORMSIZE", DbType:="NVarChar(200)")>  _
	Public Property STFORMSIZE() As String
		Get
			Return Me._STFORMSIZE
		End Get
		Set
			If (String.Equals(Me._STFORMSIZE, value) = false) Then
				Me.OnSTFORMSIZEChanging(value)
				Me.SendPropertyChanging
				Me._STFORMSIZE = value
				Me.SendPropertyChanged("STFORMSIZE")
				Me.OnSTFORMSIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STFLDIDX", DbType:="NVarChar(256)")>  _
	Public Property STFLDIDX() As String
		Get
			Return Me._STFLDIDX
		End Get
		Set
			If (String.Equals(Me._STFLDIDX, value) = false) Then
				Me.OnSTFLDIDXChanging(value)
				Me.SendPropertyChanging
				Me._STFLDIDX = value
				Me.SendPropertyChanged("STFLDIDX")
				Me.OnSTFLDIDXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGEDT", DbType:="NVarChar(1)")>  _
	Public Property FGEDT() As System.Nullable(Of Char)
		Get
			Return Me._FGEDT
		End Get
		Set
			If (Me._FGEDT.Equals(value) = false) Then
				Me.OnFGEDTChanging(value)
				Me.SendPropertyChanging
				Me._FGEDT = value
				Me.SendPropertyChanged("FGEDT")
				Me.OnFGEDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOFRMLEVEL", DbType:="Int")>  _
	Public Property NOFRMLEVEL() As System.Nullable(Of Integer)
		Get
			Return Me._NOFRMLEVEL
		End Get
		Set
			If (Me._NOFRMLEVEL.Equals(value) = false) Then
				Me.OnNOFRMLEVELChanging(value)
				Me.SendPropertyChanging
				Me._NOFRMLEVEL = value
				Me.SendPropertyChanged("NOFRMLEVEL")
				Me.OnNOFRMLEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGREPORT", DbType:="NVarChar(1)")>  _
	Public Property FGREPORT() As System.Nullable(Of Char)
		Get
			Return Me._FGREPORT
		End Get
		Set
			If (Me._FGREPORT.Equals(value) = false) Then
				Me.OnFGREPORTChanging(value)
				Me.SendPropertyChanging
				Me._FGREPORT = value
				Me.SendPropertyChanged("FGREPORT")
				Me.OnFGREPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRMKIND", DbType:="Int")>  _
	Public Property IDFRMKIND() As System.Nullable(Of Integer)
		Get
			Return Me._IDFRMKIND
		End Get
		Set
			If (Me._IDFRMKIND.Equals(value) = false) Then
				Me.OnIDFRMKINDChanging(value)
				Me.SendPropertyChanging
				Me._IDFRMKIND = value
				Me.SendPropertyChanged("IDFRMKIND")
				Me.OnIDFRMKINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMF1020", Storage:="_FRMF1020", ThisKey:="IDFRM", OtherKey:="IDFRM", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property FRMF1020() As FRMF1020
		Get
			Return Me._FRMF1020.Entity
		End Get
		Set
			Dim previousValue As FRMF1020 = Me._FRMF1020.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1020.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1020.Entity = Nothing
					previousValue.FRMF1000 = Nothing
				End If
				Me._FRMF1020.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FRMF1000 = Me
				End If
				Me.SendPropertyChanged("FRMF1020")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMI1001", Storage:="_FRMI1001", ThisKey:="IDFRM", OtherKey:="IDFRM")>  _
	Public Property FRMI1001() As EntitySet(Of FRMI1001)
		Get
			Return Me._FRMI1001
		End Get
		Set
			Me._FRMI1001.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMH0001", Storage:="_FRMH0001", ThisKey:="IDFRM", OtherKey:="IDFRM", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property FRMH0001() As FRMH0001
		Get
			Return Me._FRMH0001.Entity
		End Get
		Set
			Dim previousValue As FRMH0001 = Me._FRMH0001.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMH0001.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMH0001.Entity = Nothing
					previousValue.FRMF1000 = Nothing
				End If
				Me._FRMH0001.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FRMF1000 = Me
				End If
				Me.SendPropertyChanged("FRMH0001")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMS0001", Storage:="_FRMS0001", ThisKey:="IDFRM", OtherKey:="IDFRM")>  _
	Public Property FRMS0001() As EntitySet(Of FRMS0001)
		Get
			Return Me._FRMS0001
		End Get
		Set
			Me._FRMS0001.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0007", Storage:="_EGGA0007", ThisKey:="IDFRM", OtherKey:="IDFRM", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property EGGA0007() As EGGA0007
		Get
			Return Me._EGGA0007.Entity
		End Get
		Set
			Dim previousValue As EGGA0007 = Me._EGGA0007.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._EGGA0007.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._EGGA0007.Entity = Nothing
					previousValue.FRMF1000 = Nothing
				End If
				Me._EGGA0007.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FRMF1000 = Me
				End If
				Me.SendPropertyChanged("EGGA0007")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0007EX", Storage:="_EGGA0007EX", ThisKey:="IDFRM", OtherKey:="IDFRM", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property EGGA0007EX() As EGGA0007EX
		Get
			Return Me._EGGA0007EX.Entity
		End Get
		Set
			Dim previousValue As EGGA0007EX = Me._EGGA0007EX.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._EGGA0007EX.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._EGGA0007EX.Entity = Nothing
					previousValue.FRMF1000 = Nothing
				End If
				Me._EGGA0007EX.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FRMF1000 = Me
				End If
				Me.SendPropertyChanged("EGGA0007EX")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0013", Storage:="_EGGA0013", ThisKey:="IDFRM", OtherKey:="IDFRM", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property EGGA0013() As EGGA0013
		Get
			Return Me._EGGA0013.Entity
		End Get
		Set
			Dim previousValue As EGGA0013 = Me._EGGA0013.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._EGGA0013.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._EGGA0013.Entity = Nothing
					previousValue.FRMF1000 = Nothing
				End If
				Me._EGGA0013.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FRMF1000 = Me
				End If
				Me.SendPropertyChanged("EGGA0013")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMC1000_FRMF1000", Storage:="_FRMC1000", ThisKey:="IDCTG", OtherKey:="IDCTG", IsForeignKey:=true)>  _
	Public Property FRMC1000() As FRMC1000
		Get
			Return Me._FRMC1000.Entity
		End Get
		Set
			Dim previousValue As FRMC1000 = Me._FRMC1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMC1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMC1000.Entity = Nothing
					previousValue.FRMF1000.Remove(Me)
				End If
				Me._FRMC1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMF1000.Add(Me)
					Me._IDCTG = value.IDCTG
				Else
					Me._IDCTG = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FRMC1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FRMI1001(ByVal entity As FRMI1001)
		Me.SendPropertyChanging
		entity.FRMF1000 = Me
	End Sub
	
	Private Sub detach_FRMI1001(ByVal entity As FRMI1001)
		Me.SendPropertyChanging
		entity.FRMF1000 = Nothing
	End Sub
	
	Private Sub attach_FRMS0001(ByVal entity As FRMS0001)
		Me.SendPropertyChanging
		entity.FRMF1000 = Me
	End Sub
	
	Private Sub detach_FRMS0001(ByVal entity As FRMS0001)
		Me.SendPropertyChanging
		entity.FRMF1000 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMF1020")>  _
Partial Public Class FRMF1020
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _TPCULTURE As String
	
	Private _STMAKE As String
	
	Private _STACCEPT As String
	
	Private _STSUBMIT As String
	
	Private _STDENY As String
	
	Private _STREMAND As String
	
	Private _STPULLBACK As String
	
	Private _STBEFORECHECK As String
	
	Private _STBEFORECHECKLIST As String
	
	Private _STCUTINTO As String
	
	Private _STCUTINTO2 As String
	
	Private _STCONTRIB As String
	
	Private _STCONTRIBSUB As String
	
	Private _STRES As String
	
	Private _STMAIL As String
	
	Private _STHISTORY As String
	
	Private _STROUTEDISPLAY As String
	
	Private _STROUTECHANGE As String
	
	Private _STCOMMENT As String
	
	Private _STCOMMENTDISPLAY As String
	
	Private _STCHECKIN As String
	
	Private _STCHECKOUT As String
	
	Private _STSAVE As String
	
	Private _STDELETE As String
	
	Private _STPRINT As String
	
	Private _STCOPY As String
	
	Private _STSHARE As String
	
	Private _STFREEROUTE As String
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnTPCULTUREChanging(value As String)
    End Sub
    Partial Private Sub OnTPCULTUREChanged()
    End Sub
    Partial Private Sub OnSTMAKEChanging(value As String)
    End Sub
    Partial Private Sub OnSTMAKEChanged()
    End Sub
    Partial Private Sub OnSTACCEPTChanging(value As String)
    End Sub
    Partial Private Sub OnSTACCEPTChanged()
    End Sub
    Partial Private Sub OnSTSUBMITChanging(value As String)
    End Sub
    Partial Private Sub OnSTSUBMITChanged()
    End Sub
    Partial Private Sub OnSTDENYChanging(value As String)
    End Sub
    Partial Private Sub OnSTDENYChanged()
    End Sub
    Partial Private Sub OnSTREMANDChanging(value As String)
    End Sub
    Partial Private Sub OnSTREMANDChanged()
    End Sub
    Partial Private Sub OnSTPULLBACKChanging(value As String)
    End Sub
    Partial Private Sub OnSTPULLBACKChanged()
    End Sub
    Partial Private Sub OnSTBEFORECHECKChanging(value As String)
    End Sub
    Partial Private Sub OnSTBEFORECHECKChanged()
    End Sub
    Partial Private Sub OnSTBEFORECHECKLISTChanging(value As String)
    End Sub
    Partial Private Sub OnSTBEFORECHECKLISTChanged()
    End Sub
    Partial Private Sub OnSTCUTINTOChanging(value As String)
    End Sub
    Partial Private Sub OnSTCUTINTOChanged()
    End Sub
    Partial Private Sub OnSTCUTINTO2Changing(value As String)
    End Sub
    Partial Private Sub OnSTCUTINTO2Changed()
    End Sub
    Partial Private Sub OnSTCONTRIBChanging(value As String)
    End Sub
    Partial Private Sub OnSTCONTRIBChanged()
    End Sub
    Partial Private Sub OnSTCONTRIBSUBChanging(value As String)
    End Sub
    Partial Private Sub OnSTCONTRIBSUBChanged()
    End Sub
    Partial Private Sub OnSTRESChanging(value As String)
    End Sub
    Partial Private Sub OnSTRESChanged()
    End Sub
    Partial Private Sub OnSTMAILChanging(value As String)
    End Sub
    Partial Private Sub OnSTMAILChanged()
    End Sub
    Partial Private Sub OnSTHISTORYChanging(value As String)
    End Sub
    Partial Private Sub OnSTHISTORYChanged()
    End Sub
    Partial Private Sub OnSTROUTEDISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnSTROUTEDISPLAYChanged()
    End Sub
    Partial Private Sub OnSTROUTECHANGEChanging(value As String)
    End Sub
    Partial Private Sub OnSTROUTECHANGEChanged()
    End Sub
    Partial Private Sub OnSTCOMMENTChanging(value As String)
    End Sub
    Partial Private Sub OnSTCOMMENTChanged()
    End Sub
    Partial Private Sub OnSTCOMMENTDISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnSTCOMMENTDISPLAYChanged()
    End Sub
    Partial Private Sub OnSTCHECKINChanging(value As String)
    End Sub
    Partial Private Sub OnSTCHECKINChanged()
    End Sub
    Partial Private Sub OnSTCHECKOUTChanging(value As String)
    End Sub
    Partial Private Sub OnSTCHECKOUTChanged()
    End Sub
    Partial Private Sub OnSTSAVEChanging(value As String)
    End Sub
    Partial Private Sub OnSTSAVEChanged()
    End Sub
    Partial Private Sub OnSTDELETEChanging(value As String)
    End Sub
    Partial Private Sub OnSTDELETEChanged()
    End Sub
    Partial Private Sub OnSTPRINTChanging(value As String)
    End Sub
    Partial Private Sub OnSTPRINTChanged()
    End Sub
    Partial Private Sub OnSTCOPYChanging(value As String)
    End Sub
    Partial Private Sub OnSTCOPYChanged()
    End Sub
    Partial Private Sub OnSTSHAREChanging(value As String)
    End Sub
    Partial Private Sub OnSTSHAREChanged()
    End Sub
    Partial Private Sub OnSTFREEROUTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTFREEROUTEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPCULTURE", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TPCULTURE() As String
		Get
			Return Me._TPCULTURE
		End Get
		Set
			If (String.Equals(Me._TPCULTURE, value) = false) Then
				Me.OnTPCULTUREChanging(value)
				Me.SendPropertyChanging
				Me._TPCULTURE = value
				Me.SendPropertyChanged("TPCULTURE")
				Me.OnTPCULTUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STMAKE", DbType:="NVarChar(8)")>  _
	Public Property STMAKE() As String
		Get
			Return Me._STMAKE
		End Get
		Set
			If (String.Equals(Me._STMAKE, value) = false) Then
				Me.OnSTMAKEChanging(value)
				Me.SendPropertyChanging
				Me._STMAKE = value
				Me.SendPropertyChanged("STMAKE")
				Me.OnSTMAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STACCEPT", DbType:="NVarChar(8)")>  _
	Public Property STACCEPT() As String
		Get
			Return Me._STACCEPT
		End Get
		Set
			If (String.Equals(Me._STACCEPT, value) = false) Then
				Me.OnSTACCEPTChanging(value)
				Me.SendPropertyChanging
				Me._STACCEPT = value
				Me.SendPropertyChanged("STACCEPT")
				Me.OnSTACCEPTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STSUBMIT", DbType:="NVarChar(8)")>  _
	Public Property STSUBMIT() As String
		Get
			Return Me._STSUBMIT
		End Get
		Set
			If (String.Equals(Me._STSUBMIT, value) = false) Then
				Me.OnSTSUBMITChanging(value)
				Me.SendPropertyChanging
				Me._STSUBMIT = value
				Me.SendPropertyChanged("STSUBMIT")
				Me.OnSTSUBMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STDENY", DbType:="NVarChar(8)")>  _
	Public Property STDENY() As String
		Get
			Return Me._STDENY
		End Get
		Set
			If (String.Equals(Me._STDENY, value) = false) Then
				Me.OnSTDENYChanging(value)
				Me.SendPropertyChanging
				Me._STDENY = value
				Me.SendPropertyChanged("STDENY")
				Me.OnSTDENYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STREMAND", DbType:="NVarChar(8)")>  _
	Public Property STREMAND() As String
		Get
			Return Me._STREMAND
		End Get
		Set
			If (String.Equals(Me._STREMAND, value) = false) Then
				Me.OnSTREMANDChanging(value)
				Me.SendPropertyChanging
				Me._STREMAND = value
				Me.SendPropertyChanged("STREMAND")
				Me.OnSTREMANDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STPULLBACK", DbType:="NVarChar(8)")>  _
	Public Property STPULLBACK() As String
		Get
			Return Me._STPULLBACK
		End Get
		Set
			If (String.Equals(Me._STPULLBACK, value) = false) Then
				Me.OnSTPULLBACKChanging(value)
				Me.SendPropertyChanging
				Me._STPULLBACK = value
				Me.SendPropertyChanged("STPULLBACK")
				Me.OnSTPULLBACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STBEFORECHECK", DbType:="NVarChar(8)")>  _
	Public Property STBEFORECHECK() As String
		Get
			Return Me._STBEFORECHECK
		End Get
		Set
			If (String.Equals(Me._STBEFORECHECK, value) = false) Then
				Me.OnSTBEFORECHECKChanging(value)
				Me.SendPropertyChanging
				Me._STBEFORECHECK = value
				Me.SendPropertyChanged("STBEFORECHECK")
				Me.OnSTBEFORECHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STBEFORECHECKLIST", DbType:="NVarChar(8)")>  _
	Public Property STBEFORECHECKLIST() As String
		Get
			Return Me._STBEFORECHECKLIST
		End Get
		Set
			If (String.Equals(Me._STBEFORECHECKLIST, value) = false) Then
				Me.OnSTBEFORECHECKLISTChanging(value)
				Me.SendPropertyChanging
				Me._STBEFORECHECKLIST = value
				Me.SendPropertyChanged("STBEFORECHECKLIST")
				Me.OnSTBEFORECHECKLISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCUTINTO", DbType:="NVarChar(8)")>  _
	Public Property STCUTINTO() As String
		Get
			Return Me._STCUTINTO
		End Get
		Set
			If (String.Equals(Me._STCUTINTO, value) = false) Then
				Me.OnSTCUTINTOChanging(value)
				Me.SendPropertyChanging
				Me._STCUTINTO = value
				Me.SendPropertyChanged("STCUTINTO")
				Me.OnSTCUTINTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCUTINTO2", DbType:="NVarChar(8)")>  _
	Public Property STCUTINTO2() As String
		Get
			Return Me._STCUTINTO2
		End Get
		Set
			If (String.Equals(Me._STCUTINTO2, value) = false) Then
				Me.OnSTCUTINTO2Changing(value)
				Me.SendPropertyChanging
				Me._STCUTINTO2 = value
				Me.SendPropertyChanged("STCUTINTO2")
				Me.OnSTCUTINTO2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCONTRIB", DbType:="NVarChar(8)")>  _
	Public Property STCONTRIB() As String
		Get
			Return Me._STCONTRIB
		End Get
		Set
			If (String.Equals(Me._STCONTRIB, value) = false) Then
				Me.OnSTCONTRIBChanging(value)
				Me.SendPropertyChanging
				Me._STCONTRIB = value
				Me.SendPropertyChanged("STCONTRIB")
				Me.OnSTCONTRIBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCONTRIBSUB", DbType:="NVarChar(8)")>  _
	Public Property STCONTRIBSUB() As String
		Get
			Return Me._STCONTRIBSUB
		End Get
		Set
			If (String.Equals(Me._STCONTRIBSUB, value) = false) Then
				Me.OnSTCONTRIBSUBChanging(value)
				Me.SendPropertyChanging
				Me._STCONTRIBSUB = value
				Me.SendPropertyChanged("STCONTRIBSUB")
				Me.OnSTCONTRIBSUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STRES", DbType:="NVarChar(8)")>  _
	Public Property STRES() As String
		Get
			Return Me._STRES
		End Get
		Set
			If (String.Equals(Me._STRES, value) = false) Then
				Me.OnSTRESChanging(value)
				Me.SendPropertyChanging
				Me._STRES = value
				Me.SendPropertyChanged("STRES")
				Me.OnSTRESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STMAIL", DbType:="NVarChar(8)")>  _
	Public Property STMAIL() As String
		Get
			Return Me._STMAIL
		End Get
		Set
			If (String.Equals(Me._STMAIL, value) = false) Then
				Me.OnSTMAILChanging(value)
				Me.SendPropertyChanging
				Me._STMAIL = value
				Me.SendPropertyChanged("STMAIL")
				Me.OnSTMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STHISTORY", DbType:="NVarChar(8)")>  _
	Public Property STHISTORY() As String
		Get
			Return Me._STHISTORY
		End Get
		Set
			If (String.Equals(Me._STHISTORY, value) = false) Then
				Me.OnSTHISTORYChanging(value)
				Me.SendPropertyChanging
				Me._STHISTORY = value
				Me.SendPropertyChanged("STHISTORY")
				Me.OnSTHISTORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STROUTEDISPLAY", DbType:="NVarChar(8)")>  _
	Public Property STROUTEDISPLAY() As String
		Get
			Return Me._STROUTEDISPLAY
		End Get
		Set
			If (String.Equals(Me._STROUTEDISPLAY, value) = false) Then
				Me.OnSTROUTEDISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._STROUTEDISPLAY = value
				Me.SendPropertyChanged("STROUTEDISPLAY")
				Me.OnSTROUTEDISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STROUTECHANGE", DbType:="NVarChar(8)")>  _
	Public Property STROUTECHANGE() As String
		Get
			Return Me._STROUTECHANGE
		End Get
		Set
			If (String.Equals(Me._STROUTECHANGE, value) = false) Then
				Me.OnSTROUTECHANGEChanging(value)
				Me.SendPropertyChanging
				Me._STROUTECHANGE = value
				Me.SendPropertyChanged("STROUTECHANGE")
				Me.OnSTROUTECHANGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCOMMENT", DbType:="NVarChar(8)")>  _
	Public Property STCOMMENT() As String
		Get
			Return Me._STCOMMENT
		End Get
		Set
			If (String.Equals(Me._STCOMMENT, value) = false) Then
				Me.OnSTCOMMENTChanging(value)
				Me.SendPropertyChanging
				Me._STCOMMENT = value
				Me.SendPropertyChanged("STCOMMENT")
				Me.OnSTCOMMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCOMMENTDISPLAY", DbType:="NVarChar(8)")>  _
	Public Property STCOMMENTDISPLAY() As String
		Get
			Return Me._STCOMMENTDISPLAY
		End Get
		Set
			If (String.Equals(Me._STCOMMENTDISPLAY, value) = false) Then
				Me.OnSTCOMMENTDISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._STCOMMENTDISPLAY = value
				Me.SendPropertyChanged("STCOMMENTDISPLAY")
				Me.OnSTCOMMENTDISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCHECKIN", DbType:="NVarChar(8)")>  _
	Public Property STCHECKIN() As String
		Get
			Return Me._STCHECKIN
		End Get
		Set
			If (String.Equals(Me._STCHECKIN, value) = false) Then
				Me.OnSTCHECKINChanging(value)
				Me.SendPropertyChanging
				Me._STCHECKIN = value
				Me.SendPropertyChanged("STCHECKIN")
				Me.OnSTCHECKINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCHECKOUT", DbType:="NVarChar(8)")>  _
	Public Property STCHECKOUT() As String
		Get
			Return Me._STCHECKOUT
		End Get
		Set
			If (String.Equals(Me._STCHECKOUT, value) = false) Then
				Me.OnSTCHECKOUTChanging(value)
				Me.SendPropertyChanging
				Me._STCHECKOUT = value
				Me.SendPropertyChanged("STCHECKOUT")
				Me.OnSTCHECKOUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STSAVE", DbType:="NVarChar(8)")>  _
	Public Property STSAVE() As String
		Get
			Return Me._STSAVE
		End Get
		Set
			If (String.Equals(Me._STSAVE, value) = false) Then
				Me.OnSTSAVEChanging(value)
				Me.SendPropertyChanging
				Me._STSAVE = value
				Me.SendPropertyChanged("STSAVE")
				Me.OnSTSAVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STDELETE", DbType:="NVarChar(8)")>  _
	Public Property STDELETE() As String
		Get
			Return Me._STDELETE
		End Get
		Set
			If (String.Equals(Me._STDELETE, value) = false) Then
				Me.OnSTDELETEChanging(value)
				Me.SendPropertyChanging
				Me._STDELETE = value
				Me.SendPropertyChanged("STDELETE")
				Me.OnSTDELETEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STPRINT", DbType:="NVarChar(8)")>  _
	Public Property STPRINT() As String
		Get
			Return Me._STPRINT
		End Get
		Set
			If (String.Equals(Me._STPRINT, value) = false) Then
				Me.OnSTPRINTChanging(value)
				Me.SendPropertyChanging
				Me._STPRINT = value
				Me.SendPropertyChanged("STPRINT")
				Me.OnSTPRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCOPY", DbType:="NVarChar(8)")>  _
	Public Property STCOPY() As String
		Get
			Return Me._STCOPY
		End Get
		Set
			If (String.Equals(Me._STCOPY, value) = false) Then
				Me.OnSTCOPYChanging(value)
				Me.SendPropertyChanging
				Me._STCOPY = value
				Me.SendPropertyChanged("STCOPY")
				Me.OnSTCOPYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STSHARE", DbType:="NVarChar(8)")>  _
	Public Property STSHARE() As String
		Get
			Return Me._STSHARE
		End Get
		Set
			If (String.Equals(Me._STSHARE, value) = false) Then
				Me.OnSTSHAREChanging(value)
				Me.SendPropertyChanging
				Me._STSHARE = value
				Me.SendPropertyChanged("STSHARE")
				Me.OnSTSHAREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STFREEROUTE", DbType:="NVarChar(8)")>  _
	Public Property STFREEROUTE() As String
		Get
			Return Me._STFREEROUTE
		End Get
		Set
			If (String.Equals(Me._STFREEROUTE, value) = false) Then
				Me.OnSTFREEROUTEChanging(value)
				Me.SendPropertyChanging
				Me._STFREEROUTE = value
				Me.SendPropertyChanged("STFREEROUTE")
				Me.OnSTFREEROUTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMF1020", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.FRMF1020 = Nothing
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMF1020 = Me
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMI1001")>  _
Partial Public Class FRMI1001
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFLD As Integer
	
	Private _NMSYSFLD As String
	
	Private _NMTXTFLD As String
	
	Private _TPFLD As String
	
	Private _VLSIZE As System.Nullable(Of Integer)
	
	Private _STVALUE As String
	
	Private _TPATTR As String
	
	Private _IDFRM As System.Nullable(Of Integer)
	
	Private _IDGUI As System.Nullable(Of Integer)
	
	Private _IDGUIP As System.Nullable(Of Integer)
	
	Private _DOCTYPE As System.Nullable(Of Integer)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _TPDOCCOPY As System.Nullable(Of Char)
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
	Private _FRMG1000 As EntityRef(Of FRMG1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFLDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFLDChanged()
    End Sub
    Partial Private Sub OnNMSYSFLDChanging(value As String)
    End Sub
    Partial Private Sub OnNMSYSFLDChanged()
    End Sub
    Partial Private Sub OnNMTXTFLDChanging(value As String)
    End Sub
    Partial Private Sub OnNMTXTFLDChanged()
    End Sub
    Partial Private Sub OnTPFLDChanging(value As String)
    End Sub
    Partial Private Sub OnTPFLDChanged()
    End Sub
    Partial Private Sub OnVLSIZEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVLSIZEChanged()
    End Sub
    Partial Private Sub OnSTVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTVALUEChanged()
    End Sub
    Partial Private Sub OnTPATTRChanging(value As String)
    End Sub
    Partial Private Sub OnTPATTRChanged()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnIDGUIPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIPChanged()
    End Sub
    Partial Private Sub OnDOCTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOCTYPEChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    Partial Private Sub OnTPDOCCOPYChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnTPDOCCOPYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		Me._FRMG1000 = CType(Nothing, EntityRef(Of FRMG1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFLD", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFLD() As Integer
		Get
			Return Me._IDFLD
		End Get
		Set
			If ((Me._IDFLD = value)  _
						= false) Then
				Me.OnIDFLDChanging(value)
				Me.SendPropertyChanging
				Me._IDFLD = value
				Me.SendPropertyChanged("IDFLD")
				Me.OnIDFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMSYSFLD", DbType:="NVarChar(20)")>  _
	Public Property NMSYSFLD() As String
		Get
			Return Me._NMSYSFLD
		End Get
		Set
			If (String.Equals(Me._NMSYSFLD, value) = false) Then
				Me.OnNMSYSFLDChanging(value)
				Me.SendPropertyChanging
				Me._NMSYSFLD = value
				Me.SendPropertyChanged("NMSYSFLD")
				Me.OnNMSYSFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMTXTFLD", DbType:="NVarChar(40)")>  _
	Public Property NMTXTFLD() As String
		Get
			Return Me._NMTXTFLD
		End Get
		Set
			If (String.Equals(Me._NMTXTFLD, value) = false) Then
				Me.OnNMTXTFLDChanging(value)
				Me.SendPropertyChanging
				Me._NMTXTFLD = value
				Me.SendPropertyChanged("NMTXTFLD")
				Me.OnNMTXTFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPFLD", DbType:="NVarChar(10)")>  _
	Public Property TPFLD() As String
		Get
			Return Me._TPFLD
		End Get
		Set
			If (String.Equals(Me._TPFLD, value) = false) Then
				Me.OnTPFLDChanging(value)
				Me.SendPropertyChanging
				Me._TPFLD = value
				Me.SendPropertyChanged("TPFLD")
				Me.OnTPFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLSIZE", DbType:="Int")>  _
	Public Property VLSIZE() As System.Nullable(Of Integer)
		Get
			Return Me._VLSIZE
		End Get
		Set
			If (Me._VLSIZE.Equals(value) = false) Then
				Me.OnVLSIZEChanging(value)
				Me.SendPropertyChanging
				Me._VLSIZE = value
				Me.SendPropertyChanged("VLSIZE")
				Me.OnVLSIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STVALUE", DbType:="NVarChar(2048)")>  _
	Public Property STVALUE() As String
		Get
			Return Me._STVALUE
		End Get
		Set
			If (String.Equals(Me._STVALUE, value) = false) Then
				Me.OnSTVALUEChanging(value)
				Me.SendPropertyChanging
				Me._STVALUE = value
				Me.SendPropertyChanged("STVALUE")
				Me.OnSTVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPATTR", DbType:="NVarChar(20)")>  _
	Public Property TPATTR() As String
		Get
			Return Me._TPATTR
		End Get
		Set
			If (String.Equals(Me._TPATTR, value) = false) Then
				Me.OnTPATTRChanging(value)
				Me.SendPropertyChanging
				Me._TPATTR = value
				Me.SendPropertyChanged("TPATTR")
				Me.OnTPATTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int")>  _
	Public Property IDFRM() As System.Nullable(Of Integer)
		Get
			Return Me._IDFRM
		End Get
		Set
			If (Me._IDFRM.Equals(value) = false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int")>  _
	Public Property IDGUI() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUI
		End Get
		Set
			If (Me._IDGUI.Equals(value) = false) Then
				If Me._FRMG1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIP", DbType:="Int")>  _
	Public Property IDGUIP() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUIP
		End Get
		Set
			If (Me._IDGUIP.Equals(value) = false) Then
				Me.OnIDGUIPChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIP = value
				Me.SendPropertyChanged("IDGUIP")
				Me.OnIDGUIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCTYPE", DbType:="Int")>  _
	Public Property DOCTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DOCTYPE
		End Get
		Set
			If (Me._DOCTYPE.Equals(value) = false) Then
				Me.OnDOCTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DOCTYPE = value
				Me.SendPropertyChanged("DOCTYPE")
				Me.OnDOCTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPDOCCOPY", DbType:="NVarChar(1)")>  _
	Public Property TPDOCCOPY() As System.Nullable(Of Char)
		Get
			Return Me._TPDOCCOPY
		End Get
		Set
			If (Me._TPDOCCOPY.Equals(value) = false) Then
				Me.OnTPDOCCOPYChanging(value)
				Me.SendPropertyChanging
				Me._TPDOCCOPY = value
				Me.SendPropertyChanged("TPDOCCOPY")
				Me.OnTPDOCCOPYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMI1001", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.FRMI1001.Remove(Me)
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMI1001.Add(Me)
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMG1000_FRMI1001", Storage:="_FRMG1000", ThisKey:="IDGUI", OtherKey:="IDGUI", IsForeignKey:=true)>  _
	Public Property FRMG1000() As FRMG1000
		Get
			Return Me._FRMG1000.Entity
		End Get
		Set
			Dim previousValue As FRMG1000 = Me._FRMG1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMG1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMG1000.Entity = Nothing
					previousValue.FRMI1001.Remove(Me)
				End If
				Me._FRMG1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMI1001.Add(Me)
					Me._IDGUI = value.IDGUI
				Else
					Me._IDGUI = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FRMG1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMI1000")>  _
Partial Public Class FRMI1000
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFLD As Integer
	
	Private _NMSYSFLD As String
	
	Private _NMTXTFLD As String
	
	Private _TPFLD As String
	
	Private _VLSIZE As System.Nullable(Of Integer)
	
	Private _STVALUE As String
	
	Private _TPATTR As String
	
	Private _IDFRM As System.Nullable(Of Integer)
	
	Private _IDGUI As System.Nullable(Of Integer)
	
	Private _IDGUIP As System.Nullable(Of Integer)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _FRMG1000 As EntityRef(Of FRMG1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFLDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFLDChanged()
    End Sub
    Partial Private Sub OnNMSYSFLDChanging(value As String)
    End Sub
    Partial Private Sub OnNMSYSFLDChanged()
    End Sub
    Partial Private Sub OnNMTXTFLDChanging(value As String)
    End Sub
    Partial Private Sub OnNMTXTFLDChanged()
    End Sub
    Partial Private Sub OnTPFLDChanging(value As String)
    End Sub
    Partial Private Sub OnTPFLDChanged()
    End Sub
    Partial Private Sub OnVLSIZEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVLSIZEChanged()
    End Sub
    Partial Private Sub OnSTVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTVALUEChanged()
    End Sub
    Partial Private Sub OnTPATTRChanging(value As String)
    End Sub
    Partial Private Sub OnTPATTRChanged()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnIDGUIPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIPChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMG1000 = CType(Nothing, EntityRef(Of FRMG1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFLD", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFLD() As Integer
		Get
			Return Me._IDFLD
		End Get
		Set
			If ((Me._IDFLD = value)  _
						= false) Then
				Me.OnIDFLDChanging(value)
				Me.SendPropertyChanging
				Me._IDFLD = value
				Me.SendPropertyChanged("IDFLD")
				Me.OnIDFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMSYSFLD", DbType:="NVarChar(20)")>  _
	Public Property NMSYSFLD() As String
		Get
			Return Me._NMSYSFLD
		End Get
		Set
			If (String.Equals(Me._NMSYSFLD, value) = false) Then
				Me.OnNMSYSFLDChanging(value)
				Me.SendPropertyChanging
				Me._NMSYSFLD = value
				Me.SendPropertyChanged("NMSYSFLD")
				Me.OnNMSYSFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMTXTFLD", DbType:="NVarChar(40)")>  _
	Public Property NMTXTFLD() As String
		Get
			Return Me._NMTXTFLD
		End Get
		Set
			If (String.Equals(Me._NMTXTFLD, value) = false) Then
				Me.OnNMTXTFLDChanging(value)
				Me.SendPropertyChanging
				Me._NMTXTFLD = value
				Me.SendPropertyChanged("NMTXTFLD")
				Me.OnNMTXTFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPFLD", DbType:="NVarChar(10)")>  _
	Public Property TPFLD() As String
		Get
			Return Me._TPFLD
		End Get
		Set
			If (String.Equals(Me._TPFLD, value) = false) Then
				Me.OnTPFLDChanging(value)
				Me.SendPropertyChanging
				Me._TPFLD = value
				Me.SendPropertyChanged("TPFLD")
				Me.OnTPFLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLSIZE", DbType:="Int")>  _
	Public Property VLSIZE() As System.Nullable(Of Integer)
		Get
			Return Me._VLSIZE
		End Get
		Set
			If (Me._VLSIZE.Equals(value) = false) Then
				Me.OnVLSIZEChanging(value)
				Me.SendPropertyChanging
				Me._VLSIZE = value
				Me.SendPropertyChanged("VLSIZE")
				Me.OnVLSIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STVALUE", DbType:="NVarChar(2048)")>  _
	Public Property STVALUE() As String
		Get
			Return Me._STVALUE
		End Get
		Set
			If (String.Equals(Me._STVALUE, value) = false) Then
				Me.OnSTVALUEChanging(value)
				Me.SendPropertyChanging
				Me._STVALUE = value
				Me.SendPropertyChanged("STVALUE")
				Me.OnSTVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPATTR", DbType:="NVarChar(20)")>  _
	Public Property TPATTR() As String
		Get
			Return Me._TPATTR
		End Get
		Set
			If (String.Equals(Me._TPATTR, value) = false) Then
				Me.OnTPATTRChanging(value)
				Me.SendPropertyChanging
				Me._TPATTR = value
				Me.SendPropertyChanged("TPATTR")
				Me.OnTPATTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int")>  _
	Public Property IDFRM() As System.Nullable(Of Integer)
		Get
			Return Me._IDFRM
		End Get
		Set
			If (Me._IDFRM.Equals(value) = false) Then
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int")>  _
	Public Property IDGUI() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUI
		End Get
		Set
			If (Me._IDGUI.Equals(value) = false) Then
				If Me._FRMG1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIP", DbType:="Int")>  _
	Public Property IDGUIP() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUIP
		End Get
		Set
			If (Me._IDGUIP.Equals(value) = false) Then
				Me.OnIDGUIPChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIP = value
				Me.SendPropertyChanged("IDGUIP")
				Me.OnIDGUIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMG1000_FRMI1000", Storage:="_FRMG1000", ThisKey:="IDGUI", OtherKey:="IDGUI", IsForeignKey:=true)>  _
	Public Property FRMG1000() As FRMG1000
		Get
			Return Me._FRMG1000.Entity
		End Get
		Set
			Dim previousValue As FRMG1000 = Me._FRMG1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMG1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMG1000.Entity = Nothing
					previousValue.FRMI1000.Remove(Me)
				End If
				Me._FRMG1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMI1000.Add(Me)
					Me._IDGUI = value.IDGUI
				Else
					Me._IDGUI = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FRMG1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1000")>  _
Partial Public Class FRMG1000
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGUI As Integer
	
	Private _TPGUI As System.Nullable(Of Integer)
	
	Private _TPGUISUB As System.Nullable(Of Integer)
	
	Private _NMSYSGUI As String
	
	Private _NMTXTGUI As String
	
	Private _NMGUITBL As String
	
	Private _NMGUIDTBL As String
	
	Private _NMONLYGUI As String
	
	Private _PTGUIPG As String
	
	Private _PTGUISETPG As String
	
	Private _PTIMGFL As String
	
	Private _STCOLUMNS As String
	
	Private _NOSORT As System.Nullable(Of Integer)
	
	Private _TPREG As Integer
	
	Private _TPMENUDISP As System.Nullable(Of Integer)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _NMGUIDTBLCLM As String
	
	Private _FGNOUGCOPY As System.Nullable(Of Char)
	
	Private _FRMI1001 As EntitySet(Of FRMI1001)
	
	Private _FRMI1000 As EntitySet(Of FRMI1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnTPGUIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPGUIChanged()
    End Sub
    Partial Private Sub OnTPGUISUBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPGUISUBChanged()
    End Sub
    Partial Private Sub OnNMSYSGUIChanging(value As String)
    End Sub
    Partial Private Sub OnNMSYSGUIChanged()
    End Sub
    Partial Private Sub OnNMTXTGUIChanging(value As String)
    End Sub
    Partial Private Sub OnNMTXTGUIChanged()
    End Sub
    Partial Private Sub OnNMGUITBLChanging(value As String)
    End Sub
    Partial Private Sub OnNMGUITBLChanged()
    End Sub
    Partial Private Sub OnNMGUIDTBLChanging(value As String)
    End Sub
    Partial Private Sub OnNMGUIDTBLChanged()
    End Sub
    Partial Private Sub OnNMONLYGUIChanging(value As String)
    End Sub
    Partial Private Sub OnNMONLYGUIChanged()
    End Sub
    Partial Private Sub OnPTGUIPGChanging(value As String)
    End Sub
    Partial Private Sub OnPTGUIPGChanged()
    End Sub
    Partial Private Sub OnPTGUISETPGChanging(value As String)
    End Sub
    Partial Private Sub OnPTGUISETPGChanged()
    End Sub
    Partial Private Sub OnPTIMGFLChanging(value As String)
    End Sub
    Partial Private Sub OnPTIMGFLChanged()
    End Sub
    Partial Private Sub OnSTCOLUMNSChanging(value As String)
    End Sub
    Partial Private Sub OnSTCOLUMNSChanged()
    End Sub
    Partial Private Sub OnNOSORTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNOSORTChanged()
    End Sub
    Partial Private Sub OnTPREGChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPREGChanged()
    End Sub
    Partial Private Sub OnTPMENUDISPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPMENUDISPChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    Partial Private Sub OnNMGUIDTBLCLMChanging(value As String)
    End Sub
    Partial Private Sub OnNMGUIDTBLCLMChanged()
    End Sub
    Partial Private Sub OnFGNOUGCOPYChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGNOUGCOPYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMI1001 = New EntitySet(Of FRMI1001)(AddressOf Me.attach_FRMI1001, AddressOf Me.detach_FRMI1001)
		Me._FRMI1000 = New EntitySet(Of FRMI1000)(AddressOf Me.attach_FRMI1000, AddressOf Me.detach_FRMI1000)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPGUI", DbType:="Int")>  _
	Public Property TPGUI() As System.Nullable(Of Integer)
		Get
			Return Me._TPGUI
		End Get
		Set
			If (Me._TPGUI.Equals(value) = false) Then
				Me.OnTPGUIChanging(value)
				Me.SendPropertyChanging
				Me._TPGUI = value
				Me.SendPropertyChanged("TPGUI")
				Me.OnTPGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPGUISUB", DbType:="Int")>  _
	Public Property TPGUISUB() As System.Nullable(Of Integer)
		Get
			Return Me._TPGUISUB
		End Get
		Set
			If (Me._TPGUISUB.Equals(value) = false) Then
				Me.OnTPGUISUBChanging(value)
				Me.SendPropertyChanging
				Me._TPGUISUB = value
				Me.SendPropertyChanged("TPGUISUB")
				Me.OnTPGUISUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMSYSGUI", DbType:="NVarChar(20)")>  _
	Public Property NMSYSGUI() As String
		Get
			Return Me._NMSYSGUI
		End Get
		Set
			If (String.Equals(Me._NMSYSGUI, value) = false) Then
				Me.OnNMSYSGUIChanging(value)
				Me.SendPropertyChanging
				Me._NMSYSGUI = value
				Me.SendPropertyChanged("NMSYSGUI")
				Me.OnNMSYSGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMTXTGUI", DbType:="NVarChar(40)")>  _
	Public Property NMTXTGUI() As String
		Get
			Return Me._NMTXTGUI
		End Get
		Set
			If (String.Equals(Me._NMTXTGUI, value) = false) Then
				Me.OnNMTXTGUIChanging(value)
				Me.SendPropertyChanging
				Me._NMTXTGUI = value
				Me.SendPropertyChanged("NMTXTGUI")
				Me.OnNMTXTGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMGUITBL", DbType:="NVarChar(8)")>  _
	Public Property NMGUITBL() As String
		Get
			Return Me._NMGUITBL
		End Get
		Set
			If (String.Equals(Me._NMGUITBL, value) = false) Then
				Me.OnNMGUITBLChanging(value)
				Me.SendPropertyChanging
				Me._NMGUITBL = value
				Me.SendPropertyChanged("NMGUITBL")
				Me.OnNMGUITBLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMGUIDTBL", DbType:="NVarChar(8)")>  _
	Public Property NMGUIDTBL() As String
		Get
			Return Me._NMGUIDTBL
		End Get
		Set
			If (String.Equals(Me._NMGUIDTBL, value) = false) Then
				Me.OnNMGUIDTBLChanging(value)
				Me.SendPropertyChanging
				Me._NMGUIDTBL = value
				Me.SendPropertyChanged("NMGUIDTBL")
				Me.OnNMGUIDTBLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMONLYGUI", DbType:="NVarChar(20)")>  _
	Public Property NMONLYGUI() As String
		Get
			Return Me._NMONLYGUI
		End Get
		Set
			If (String.Equals(Me._NMONLYGUI, value) = false) Then
				Me.OnNMONLYGUIChanging(value)
				Me.SendPropertyChanging
				Me._NMONLYGUI = value
				Me.SendPropertyChanged("NMONLYGUI")
				Me.OnNMONLYGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PTGUIPG", DbType:="NVarChar(256)")>  _
	Public Property PTGUIPG() As String
		Get
			Return Me._PTGUIPG
		End Get
		Set
			If (String.Equals(Me._PTGUIPG, value) = false) Then
				Me.OnPTGUIPGChanging(value)
				Me.SendPropertyChanging
				Me._PTGUIPG = value
				Me.SendPropertyChanged("PTGUIPG")
				Me.OnPTGUIPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PTGUISETPG", DbType:="NVarChar(256)")>  _
	Public Property PTGUISETPG() As String
		Get
			Return Me._PTGUISETPG
		End Get
		Set
			If (String.Equals(Me._PTGUISETPG, value) = false) Then
				Me.OnPTGUISETPGChanging(value)
				Me.SendPropertyChanging
				Me._PTGUISETPG = value
				Me.SendPropertyChanged("PTGUISETPG")
				Me.OnPTGUISETPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PTIMGFL", DbType:="NVarChar(256)")>  _
	Public Property PTIMGFL() As String
		Get
			Return Me._PTIMGFL
		End Get
		Set
			If (String.Equals(Me._PTIMGFL, value) = false) Then
				Me.OnPTIMGFLChanging(value)
				Me.SendPropertyChanging
				Me._PTIMGFL = value
				Me.SendPropertyChanged("PTIMGFL")
				Me.OnPTIMGFLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STCOLUMNS", DbType:="NVarChar(2000)")>  _
	Public Property STCOLUMNS() As String
		Get
			Return Me._STCOLUMNS
		End Get
		Set
			If (String.Equals(Me._STCOLUMNS, value) = false) Then
				Me.OnSTCOLUMNSChanging(value)
				Me.SendPropertyChanging
				Me._STCOLUMNS = value
				Me.SendPropertyChanged("STCOLUMNS")
				Me.OnSTCOLUMNSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOSORT", DbType:="Int")>  _
	Public Property NOSORT() As System.Nullable(Of Integer)
		Get
			Return Me._NOSORT
		End Get
		Set
			If (Me._NOSORT.Equals(value) = false) Then
				Me.OnNOSORTChanging(value)
				Me.SendPropertyChanging
				Me._NOSORT = value
				Me.SendPropertyChanged("NOSORT")
				Me.OnNOSORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPREG", DbType:="Int NOT NULL")>  _
	Public Property TPREG() As Integer
		Get
			Return Me._TPREG
		End Get
		Set
			If ((Me._TPREG = value)  _
						= false) Then
				Me.OnTPREGChanging(value)
				Me.SendPropertyChanging
				Me._TPREG = value
				Me.SendPropertyChanged("TPREG")
				Me.OnTPREGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPMENUDISP", DbType:="Int")>  _
	Public Property TPMENUDISP() As System.Nullable(Of Integer)
		Get
			Return Me._TPMENUDISP
		End Get
		Set
			If (Me._TPMENUDISP.Equals(value) = false) Then
				Me.OnTPMENUDISPChanging(value)
				Me.SendPropertyChanging
				Me._TPMENUDISP = value
				Me.SendPropertyChanged("TPMENUDISP")
				Me.OnTPMENUDISPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMGUIDTBLCLM", DbType:="NVarChar(50)")>  _
	Public Property NMGUIDTBLCLM() As String
		Get
			Return Me._NMGUIDTBLCLM
		End Get
		Set
			If (String.Equals(Me._NMGUIDTBLCLM, value) = false) Then
				Me.OnNMGUIDTBLCLMChanging(value)
				Me.SendPropertyChanging
				Me._NMGUIDTBLCLM = value
				Me.SendPropertyChanged("NMGUIDTBLCLM")
				Me.OnNMGUIDTBLCLMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGNOUGCOPY", DbType:="NVarChar(1)")>  _
	Public Property FGNOUGCOPY() As System.Nullable(Of Char)
		Get
			Return Me._FGNOUGCOPY
		End Get
		Set
			If (Me._FGNOUGCOPY.Equals(value) = false) Then
				Me.OnFGNOUGCOPYChanging(value)
				Me.SendPropertyChanging
				Me._FGNOUGCOPY = value
				Me.SendPropertyChanged("FGNOUGCOPY")
				Me.OnFGNOUGCOPYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMG1000_FRMI1001", Storage:="_FRMI1001", ThisKey:="IDGUI", OtherKey:="IDGUI")>  _
	Public Property FRMI1001() As EntitySet(Of FRMI1001)
		Get
			Return Me._FRMI1001
		End Get
		Set
			Me._FRMI1001.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMG1000_FRMI1000", Storage:="_FRMI1000", ThisKey:="IDGUI", OtherKey:="IDGUI")>  _
	Public Property FRMI1000() As EntitySet(Of FRMI1000)
		Get
			Return Me._FRMI1000
		End Get
		Set
			Me._FRMI1000.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FRMI1001(ByVal entity As FRMI1001)
		Me.SendPropertyChanging
		entity.FRMG1000 = Me
	End Sub
	
	Private Sub detach_FRMI1001(ByVal entity As FRMI1001)
		Me.SendPropertyChanging
		entity.FRMG1000 = Nothing
	End Sub
	
	Private Sub attach_FRMI1000(ByVal entity As FRMI1000)
		Me.SendPropertyChanging
		entity.FRMG1000 = Me
	End Sub
	
	Private Sub detach_FRMI1000(ByVal entity As FRMI1000)
		Me.SendPropertyChanging
		entity.FRMG1000 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1001")>  _
Partial Public Class FRMG1001
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TPUSEKIND As String
	
	Private _TPUSEPMTKIND As String
	
	Private _IDGUI As Integer
	
	Private _IDGUIGP As System.Nullable(Of Integer)
	
	Private _FGDEL As System.Nullable(Of Char)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTPUSEKINDChanging(value As String)
    End Sub
    Partial Private Sub OnTPUSEKINDChanged()
    End Sub
    Partial Private Sub OnTPUSEPMTKINDChanging(value As String)
    End Sub
    Partial Private Sub OnTPUSEPMTKINDChanged()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnIDGUIGPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIGPChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPUSEKIND", DbType:="NVarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TPUSEKIND() As String
		Get
			Return Me._TPUSEKIND
		End Get
		Set
			If (String.Equals(Me._TPUSEKIND, value) = false) Then
				Me.OnTPUSEKINDChanging(value)
				Me.SendPropertyChanging
				Me._TPUSEKIND = value
				Me.SendPropertyChanged("TPUSEKIND")
				Me.OnTPUSEKINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPUSEPMTKIND", DbType:="NVarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TPUSEPMTKIND() As String
		Get
			Return Me._TPUSEPMTKIND
		End Get
		Set
			If (String.Equals(Me._TPUSEPMTKIND, value) = false) Then
				Me.OnTPUSEPMTKINDChanging(value)
				Me.SendPropertyChanging
				Me._TPUSEPMTKIND = value
				Me.SendPropertyChanged("TPUSEPMTKIND")
				Me.OnTPUSEPMTKINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIGP", DbType:="Int")>  _
	Public Property IDGUIGP() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUIGP
		End Get
		Set
			If (Me._IDGUIGP.Equals(value) = false) Then
				Me.OnIDGUIGPChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIGP = value
				Me.SendPropertyChanged("IDGUIGP")
				Me.OnIDGUIGPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1002")>  _
Partial Public Class FRMG1002
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGUI As Integer
	
	Private _TPWF As System.Nullable(Of Integer)
	
	Private _TPBBS As System.Nullable(Of Integer)
	
	Private _TPWFTOBBS As System.Nullable(Of Integer)
	
	Private _TPSUB As System.Nullable(Of Integer)
	
	Private _TPRES As System.Nullable(Of Integer)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnTPWFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPWFChanged()
    End Sub
    Partial Private Sub OnTPBBSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPBBSChanged()
    End Sub
    Partial Private Sub OnTPWFTOBBSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPWFTOBBSChanged()
    End Sub
    Partial Private Sub OnTPSUBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPSUBChanged()
    End Sub
    Partial Private Sub OnTPRESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPRESChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPWF", DbType:="Int")>  _
	Public Property TPWF() As System.Nullable(Of Integer)
		Get
			Return Me._TPWF
		End Get
		Set
			If (Me._TPWF.Equals(value) = false) Then
				Me.OnTPWFChanging(value)
				Me.SendPropertyChanging
				Me._TPWF = value
				Me.SendPropertyChanged("TPWF")
				Me.OnTPWFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPBBS", DbType:="Int")>  _
	Public Property TPBBS() As System.Nullable(Of Integer)
		Get
			Return Me._TPBBS
		End Get
		Set
			If (Me._TPBBS.Equals(value) = false) Then
				Me.OnTPBBSChanging(value)
				Me.SendPropertyChanging
				Me._TPBBS = value
				Me.SendPropertyChanged("TPBBS")
				Me.OnTPBBSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPWFTOBBS", DbType:="Int")>  _
	Public Property TPWFTOBBS() As System.Nullable(Of Integer)
		Get
			Return Me._TPWFTOBBS
		End Get
		Set
			If (Me._TPWFTOBBS.Equals(value) = false) Then
				Me.OnTPWFTOBBSChanging(value)
				Me.SendPropertyChanging
				Me._TPWFTOBBS = value
				Me.SendPropertyChanged("TPWFTOBBS")
				Me.OnTPWFTOBBSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPSUB", DbType:="Int")>  _
	Public Property TPSUB() As System.Nullable(Of Integer)
		Get
			Return Me._TPSUB
		End Get
		Set
			If (Me._TPSUB.Equals(value) = false) Then
				Me.OnTPSUBChanging(value)
				Me.SendPropertyChanging
				Me._TPSUB = value
				Me.SendPropertyChanged("TPSUB")
				Me.OnTPSUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRES", DbType:="Int")>  _
	Public Property TPRES() As System.Nullable(Of Integer)
		Get
			Return Me._TPRES
		End Get
		Set
			If (Me._TPRES.Equals(value) = false) Then
				Me.OnTPRESChanging(value)
				Me.SendPropertyChanging
				Me._TPRES = value
				Me.SendPropertyChanged("TPRES")
				Me.OnTPRESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1003")>  _
Partial Public Class FRMG1003
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGUIGP As Integer
	
	Private _IDGUI As Integer
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGUIGPChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIGPChanged()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIGP", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUIGP() As Integer
		Get
			Return Me._IDGUIGP
		End Get
		Set
			If ((Me._IDGUIGP = value)  _
						= false) Then
				Me.OnIDGUIGPChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIGP = value
				Me.SendPropertyChanged("IDGUIGP")
				Me.OnIDGUIGPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1004")>  _
Partial Public Class FRMG1004
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGUI As Integer
	
	Private _NMTXTGUI As String
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnNMTXTGUIChanging(value As String)
    End Sub
    Partial Private Sub OnNMTXTGUIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMTXTGUI", DbType:="NVarChar(40)")>  _
	Public Property NMTXTGUI() As String
		Get
			Return Me._NMTXTGUI
		End Get
		Set
			If (String.Equals(Me._NMTXTGUI, value) = false) Then
				Me.OnNMTXTGUIChanging(value)
				Me.SendPropertyChanging
				Me._NMTXTGUI = value
				Me.SendPropertyChanged("NMTXTGUI")
				Me.OnNMTXTGUIChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1005")>  _
Partial Public Class FRMG1005
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDSEQ As Integer
	
	Private _NMCLASS As String
	
	Private _IDGUI As System.Nullable(Of Integer)
	
	Private _FGSHOW As System.Nullable(Of Boolean)
	
	Private _FGDEL As System.Nullable(Of Boolean)
	
	Private _COMMENT As String
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDSEQChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSEQChanged()
    End Sub
    Partial Private Sub OnNMCLASSChanging(value As String)
    End Sub
    Partial Private Sub OnNMCLASSChanged()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnFGSHOWChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFGSHOWChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    Partial Private Sub OnCOMMENTChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSEQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDSEQ() As Integer
		Get
			Return Me._IDSEQ
		End Get
		Set
			If ((Me._IDSEQ = value)  _
						= false) Then
				Me.OnIDSEQChanging(value)
				Me.SendPropertyChanging
				Me._IDSEQ = value
				Me.SendPropertyChanged("IDSEQ")
				Me.OnIDSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMCLASS", DbType:="NVarChar(20)")>  _
	Public Property NMCLASS() As String
		Get
			Return Me._NMCLASS
		End Get
		Set
			If (String.Equals(Me._NMCLASS, value) = false) Then
				Me.OnNMCLASSChanging(value)
				Me.SendPropertyChanging
				Me._NMCLASS = value
				Me.SendPropertyChanged("NMCLASS")
				Me.OnNMCLASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int")>  _
	Public Property IDGUI() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUI
		End Get
		Set
			If (Me._IDGUI.Equals(value) = false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSHOW", DbType:="Bit")>  _
	Public Property FGSHOW() As System.Nullable(Of Boolean)
		Get
			Return Me._FGSHOW
		End Get
		Set
			If (Me._FGSHOW.Equals(value) = false) Then
				Me.OnFGSHOWChanging(value)
				Me.SendPropertyChanging
				Me._FGSHOW = value
				Me.SendPropertyChanged("FGSHOW")
				Me.OnFGSHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="Bit")>  _
	Public Property FGDEL() As System.Nullable(Of Boolean)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT", DbType:="NVarChar(200)")>  _
	Public Property COMMENT() As String
		Get
			Return Me._COMMENT
		End Get
		Set
			If (String.Equals(Me._COMMENT, value) = false) Then
				Me.OnCOMMENTChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT = value
				Me.SendPropertyChanged("COMMENT")
				Me.OnCOMMENTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMG1010")>  _
Partial Public Class FRMG1010
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGUI As Integer
	
	Private _TPGROUP As String
	
	Private _IDGUIAIM As Integer
	
	Private _FGDEL As System.Nullable(Of Char)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGUIChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIChanged()
    End Sub
    Partial Private Sub OnTPGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnTPGROUPChanged()
    End Sub
    Partial Private Sub OnIDGUIAIMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGUIAIMChanged()
    End Sub
    Partial Private Sub OnFGDELChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDELChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUI", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUI() As Integer
		Get
			Return Me._IDGUI
		End Get
		Set
			If ((Me._IDGUI = value)  _
						= false) Then
				Me.OnIDGUIChanging(value)
				Me.SendPropertyChanging
				Me._IDGUI = value
				Me.SendPropertyChanged("IDGUI")
				Me.OnIDGUIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPGROUP", DbType:="NVarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TPGROUP() As String
		Get
			Return Me._TPGROUP
		End Get
		Set
			If (String.Equals(Me._TPGROUP, value) = false) Then
				Me.OnTPGROUPChanging(value)
				Me.SendPropertyChanging
				Me._TPGROUP = value
				Me.SendPropertyChanged("TPGROUP")
				Me.OnTPGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIAIM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDGUIAIM() As Integer
		Get
			Return Me._IDGUIAIM
		End Get
		Set
			If ((Me._IDGUIAIM = value)  _
						= false) Then
				Me.OnIDGUIAIMChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIAIM = value
				Me.SendPropertyChanged("IDGUIAIM")
				Me.OnIDGUIAIMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDEL", DbType:="NVarChar(1)")>  _
	Public Property FGDEL() As System.Nullable(Of Char)
		Get
			Return Me._FGDEL
		End Get
		Set
			If (Me._FGDEL.Equals(value) = false) Then
				Me.OnFGDELChanging(value)
				Me.SendPropertyChanging
				Me._FGDEL = value
				Me.SendPropertyChanged("FGDEL")
				Me.OnFGDELChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMH0001")>  _
Partial Public Class FRMH0001
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _NMFRMLINK As String
	
	Private _STFRMURL As String
	
	Private _FGFRM As Boolean
	
	Private _NMVIEWLINK As String
	
	Private _STVIEWURL As String
	
	Private _FGVIEW As Boolean
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnNMFRMLINKChanging(value As String)
    End Sub
    Partial Private Sub OnNMFRMLINKChanged()
    End Sub
    Partial Private Sub OnSTFRMURLChanging(value As String)
    End Sub
    Partial Private Sub OnSTFRMURLChanged()
    End Sub
    Partial Private Sub OnFGFRMChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFGFRMChanged()
    End Sub
    Partial Private Sub OnNMVIEWLINKChanging(value As String)
    End Sub
    Partial Private Sub OnNMVIEWLINKChanged()
    End Sub
    Partial Private Sub OnSTVIEWURLChanging(value As String)
    End Sub
    Partial Private Sub OnSTVIEWURLChanged()
    End Sub
    Partial Private Sub OnFGVIEWChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFGVIEWChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMFRMLINK", DbType:="NVarChar(40)")>  _
	Public Property NMFRMLINK() As String
		Get
			Return Me._NMFRMLINK
		End Get
		Set
			If (String.Equals(Me._NMFRMLINK, value) = false) Then
				Me.OnNMFRMLINKChanging(value)
				Me.SendPropertyChanging
				Me._NMFRMLINK = value
				Me.SendPropertyChanged("NMFRMLINK")
				Me.OnNMFRMLINKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STFRMURL", DbType:="NVarChar(256)")>  _
	Public Property STFRMURL() As String
		Get
			Return Me._STFRMURL
		End Get
		Set
			If (String.Equals(Me._STFRMURL, value) = false) Then
				Me.OnSTFRMURLChanging(value)
				Me.SendPropertyChanging
				Me._STFRMURL = value
				Me.SendPropertyChanged("STFRMURL")
				Me.OnSTFRMURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGFRM", DbType:="Bit NOT NULL")>  _
	Public Property FGFRM() As Boolean
		Get
			Return Me._FGFRM
		End Get
		Set
			If ((Me._FGFRM = value)  _
						= false) Then
				Me.OnFGFRMChanging(value)
				Me.SendPropertyChanging
				Me._FGFRM = value
				Me.SendPropertyChanged("FGFRM")
				Me.OnFGFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMVIEWLINK", DbType:="NVarChar(40)")>  _
	Public Property NMVIEWLINK() As String
		Get
			Return Me._NMVIEWLINK
		End Get
		Set
			If (String.Equals(Me._NMVIEWLINK, value) = false) Then
				Me.OnNMVIEWLINKChanging(value)
				Me.SendPropertyChanging
				Me._NMVIEWLINK = value
				Me.SendPropertyChanged("NMVIEWLINK")
				Me.OnNMVIEWLINKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STVIEWURL", DbType:="NVarChar(256)")>  _
	Public Property STVIEWURL() As String
		Get
			Return Me._STVIEWURL
		End Get
		Set
			If (String.Equals(Me._STVIEWURL, value) = false) Then
				Me.OnSTVIEWURLChanging(value)
				Me.SendPropertyChanging
				Me._STVIEWURL = value
				Me.SendPropertyChanged("STVIEWURL")
				Me.OnSTVIEWURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGVIEW", DbType:="Bit NOT NULL")>  _
	Public Property FGVIEW() As Boolean
		Get
			Return Me._FGVIEW
		End Get
		Set
			If ((Me._FGVIEW = value)  _
						= false) Then
				Me.OnFGVIEWChanging(value)
				Me.SendPropertyChanging
				Me._FGVIEW = value
				Me.SendPropertyChanged("FGVIEW")
				Me.OnFGVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMH0001", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.FRMH0001 = Nothing
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMH0001 = Me
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMH0002")>  _
Partial Public Class FRMH0002
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _IDVIW As Integer
	
	Private _IDDOC As Integer
	
	Private _NMLINK As String
	
	Private _IDGUIDDOC As System.Nullable(Of Integer)
	
	Private _STURL As String
	
	Private _FGSHOW As System.Nullable(Of Boolean)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As System.Nullable(Of Date)
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As System.Nullable(Of Date)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnIDVIWChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDVIWChanged()
    End Sub
    Partial Private Sub OnIDDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDOCChanged()
    End Sub
    Partial Private Sub OnNMLINKChanging(value As String)
    End Sub
    Partial Private Sub OnNMLINKChanged()
    End Sub
    Partial Private Sub OnIDGUIDDOCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDGUIDDOCChanged()
    End Sub
    Partial Private Sub OnSTURLChanging(value As String)
    End Sub
    Partial Private Sub OnSTURLChanged()
    End Sub
    Partial Private Sub OnFGSHOWChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFGSHOWChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDVIW", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDVIW() As Integer
		Get
			Return Me._IDVIW
		End Get
		Set
			If ((Me._IDVIW = value)  _
						= false) Then
				Me.OnIDVIWChanging(value)
				Me.SendPropertyChanging
				Me._IDVIW = value
				Me.SendPropertyChanged("IDVIW")
				Me.OnIDVIWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDDOC() As Integer
		Get
			Return Me._IDDOC
		End Get
		Set
			If ((Me._IDDOC = value)  _
						= false) Then
				Me.OnIDDOCChanging(value)
				Me.SendPropertyChanging
				Me._IDDOC = value
				Me.SendPropertyChanged("IDDOC")
				Me.OnIDDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMLINK", DbType:="NVarChar(40)")>  _
	Public Property NMLINK() As String
		Get
			Return Me._NMLINK
		End Get
		Set
			If (String.Equals(Me._NMLINK, value) = false) Then
				Me.OnNMLINKChanging(value)
				Me.SendPropertyChanging
				Me._NMLINK = value
				Me.SendPropertyChanged("NMLINK")
				Me.OnNMLINKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGUIDDOC", DbType:="Int")>  _
	Public Property IDGUIDDOC() As System.Nullable(Of Integer)
		Get
			Return Me._IDGUIDDOC
		End Get
		Set
			If (Me._IDGUIDDOC.Equals(value) = false) Then
				Me.OnIDGUIDDOCChanging(value)
				Me.SendPropertyChanging
				Me._IDGUIDDOC = value
				Me.SendPropertyChanged("IDGUIDDOC")
				Me.OnIDGUIDDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STURL", DbType:="NVarChar(512)")>  _
	Public Property STURL() As String
		Get
			Return Me._STURL
		End Get
		Set
			If (String.Equals(Me._STURL, value) = false) Then
				Me.OnSTURLChanging(value)
				Me.SendPropertyChanging
				Me._STURL = value
				Me.SendPropertyChanged("STURL")
				Me.OnSTURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSHOW", DbType:="Bit")>  _
	Public Property FGSHOW() As System.Nullable(Of Boolean)
		Get
			Return Me._FGSHOW
		End Get
		Set
			If (Me._FGSHOW.Equals(value) = false) Then
				Me.OnFGSHOWChanging(value)
				Me.SendPropertyChanging
				Me._FGSHOW = value
				Me.SendPropertyChanged("FGSHOW")
				Me.OnFGSHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="DateTime")>  _
	Public Property DTCREATE() As System.Nullable(Of Date)
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (Me._DTCREATE.Equals(value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="DateTime")>  _
	Public Property DTUPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (Me._DTUPDATE.Equals(value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FRMS0001")>  _
Partial Public Class FRMS0001
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCSS As Integer
	
	Private _IDFRM As System.Nullable(Of Integer)
	
	Private _CSSFILE As String
	
	Private _CSSDATA As String
	
	Private _DTCREATE As System.Nullable(Of Date)
	
	Private _DTUPDATE As System.Nullable(Of Date)
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCSSChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCSSChanged()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnCSSFILEChanging(value As String)
    End Sub
    Partial Private Sub OnCSSFILEChanged()
    End Sub
    Partial Private Sub OnCSSDATAChanging(value As String)
    End Sub
    Partial Private Sub OnCSSDATAChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCSS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCSS() As Integer
		Get
			Return Me._IDCSS
		End Get
		Set
			If ((Me._IDCSS = value)  _
						= false) Then
				Me.OnIDCSSChanging(value)
				Me.SendPropertyChanging
				Me._IDCSS = value
				Me.SendPropertyChanged("IDCSS")
				Me.OnIDCSSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int")>  _
	Public Property IDFRM() As System.Nullable(Of Integer)
		Get
			Return Me._IDFRM
		End Get
		Set
			If (Me._IDFRM.Equals(value) = false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSSFILE", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CSSFILE() As String
		Get
			Return Me._CSSFILE
		End Get
		Set
			If (String.Equals(Me._CSSFILE, value) = false) Then
				Me.OnCSSFILEChanging(value)
				Me.SendPropertyChanging
				Me._CSSFILE = value
				Me.SendPropertyChanged("CSSFILE")
				Me.OnCSSFILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSSDATA", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CSSDATA() As String
		Get
			Return Me._CSSDATA
		End Get
		Set
			If (String.Equals(Me._CSSDATA, value) = false) Then
				Me.OnCSSDATAChanging(value)
				Me.SendPropertyChanging
				Me._CSSDATA = value
				Me.SendPropertyChanged("CSSDATA")
				Me.OnCSSDATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="DateTime")>  _
	Public Property DTCREATE() As System.Nullable(Of Date)
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (Me._DTCREATE.Equals(value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="DateTime")>  _
	Public Property DTUPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (Me._DTUPDATE.Equals(value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_FRMS0001", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.FRMS0001.Remove(Me)
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FRMS0001.Add(Me)
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EGGA0007")>  _
Partial Public Class EGGA0007
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _FGPUBLIC As System.Nullable(Of Char)
	
	Private _FGCIRCU As System.Nullable(Of Char)
	
	Private _FGRIDOCCHG As System.Nullable(Of Char)
	
	Private _FGRIDOC As System.Nullable(Of Char)
	
	Private _FGCHGSVDOC As System.Nullable(Of Char)
	
	Private _IDPUBDOC As String
	
	Private _IDPUBFODOC As String
	
	Private _NMPUBDOC As String
	
	Private _IDNYDOC As String
	
	Private _IDNYFODOC As String
	
	Private _NMNYDOC As String
	
	Private _FGCPYDOC As System.Nullable(Of Char)
	
	Private _FGMALMAKE As System.Nullable(Of Char)
	
	Private _FGMALACEPT As System.Nullable(Of Char)
	
	Private _FGMALSUBMIT As System.Nullable(Of Char)
	
	Private _FGMALDENY As System.Nullable(Of Char)
	
	Private _FGMALREMAND As System.Nullable(Of Char)
	
	Private _FGUPDCIRCU As System.Nullable(Of Char)
	
	Private _FGREPRE As System.Nullable(Of Char)
	
	Private _FGDOCNO As System.Nullable(Of Char)
	
	Private _VLDOCNOFIG As System.Nullable(Of Integer)
	
	Private _FGTL As System.Nullable(Of Char)
	
	Private _VLTTL As System.Nullable(Of Integer)
	
	Private _FGROUTBTN As System.Nullable(Of Char)
	
	Private _FGSETPUB As System.Nullable(Of Char)
	
	Private _FGBTNPRINT As System.Nullable(Of Char)
	
	Private _FGALLFIND As System.Nullable(Of Char)
	
	Private _FGPDFSAVE As System.Nullable(Of Char)
	
	Private _FGNOTICE As System.Nullable(Of Char)
	
	Private _NOTICETERM As String
	
	Private _FGOPTCHRPR As System.Nullable(Of Char)
	
	Private _FGPRIINFPR As System.Nullable(Of Char)
	
	Private _FGAPLINFPR As System.Nullable(Of Char)
	
	Private _FGOPTCHRPO As System.Nullable(Of Char)
	
	Private _FGPRIINFPO As System.Nullable(Of Char)
	
	Private _FGAPLINFPO As System.Nullable(Of Char)
	
	Private _FGKAI As System.Nullable(Of Char)
	
	Private _FGTLCOM As System.Nullable(Of Char)
	
	Private _VLTTLCOM As System.Nullable(Of Integer)
	
	Private _IDCREUSER As System.Nullable(Of Integer)
	
	Private _DTCREATE As String
	
	Private _TMCREATE As String
	
	Private _IDUPDUSER As System.Nullable(Of Integer)
	
	Private _DTUPDATE As String
	
	Private _TMUPDATE As String
	
	Private _FGCOPY As System.Nullable(Of Char)
	
	Private _FGBEFORE As System.Nullable(Of Char)
	
	Private _FGHISTORY As System.Nullable(Of Char)
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnFGPUBLICChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPUBLICChanged()
    End Sub
    Partial Private Sub OnFGCIRCUChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGCIRCUChanged()
    End Sub
    Partial Private Sub OnFGRIDOCCHGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRIDOCCHGChanged()
    End Sub
    Partial Private Sub OnFGRIDOCChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRIDOCChanged()
    End Sub
    Partial Private Sub OnFGCHGSVDOCChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGCHGSVDOCChanged()
    End Sub
    Partial Private Sub OnIDPUBDOCChanging(value As String)
    End Sub
    Partial Private Sub OnIDPUBDOCChanged()
    End Sub
    Partial Private Sub OnIDPUBFODOCChanging(value As String)
    End Sub
    Partial Private Sub OnIDPUBFODOCChanged()
    End Sub
    Partial Private Sub OnNMPUBDOCChanging(value As String)
    End Sub
    Partial Private Sub OnNMPUBDOCChanged()
    End Sub
    Partial Private Sub OnIDNYDOCChanging(value As String)
    End Sub
    Partial Private Sub OnIDNYDOCChanged()
    End Sub
    Partial Private Sub OnIDNYFODOCChanging(value As String)
    End Sub
    Partial Private Sub OnIDNYFODOCChanged()
    End Sub
    Partial Private Sub OnNMNYDOCChanging(value As String)
    End Sub
    Partial Private Sub OnNMNYDOCChanged()
    End Sub
    Partial Private Sub OnFGCPYDOCChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGCPYDOCChanged()
    End Sub
    Partial Private Sub OnFGMALMAKEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGMALMAKEChanged()
    End Sub
    Partial Private Sub OnFGMALACEPTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGMALACEPTChanged()
    End Sub
    Partial Private Sub OnFGMALSUBMITChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGMALSUBMITChanged()
    End Sub
    Partial Private Sub OnFGMALDENYChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGMALDENYChanged()
    End Sub
    Partial Private Sub OnFGMALREMANDChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGMALREMANDChanged()
    End Sub
    Partial Private Sub OnFGUPDCIRCUChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGUPDCIRCUChanged()
    End Sub
    Partial Private Sub OnFGREPREChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGREPREChanged()
    End Sub
    Partial Private Sub OnFGDOCNOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGDOCNOChanged()
    End Sub
    Partial Private Sub OnVLDOCNOFIGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVLDOCNOFIGChanged()
    End Sub
    Partial Private Sub OnFGTLChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGTLChanged()
    End Sub
    Partial Private Sub OnVLTTLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVLTTLChanged()
    End Sub
    Partial Private Sub OnFGROUTBTNChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGROUTBTNChanged()
    End Sub
    Partial Private Sub OnFGSETPUBChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSETPUBChanged()
    End Sub
    Partial Private Sub OnFGBTNPRINTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGBTNPRINTChanged()
    End Sub
    Partial Private Sub OnFGALLFINDChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGALLFINDChanged()
    End Sub
    Partial Private Sub OnFGPDFSAVEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPDFSAVEChanged()
    End Sub
    Partial Private Sub OnFGNOTICEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGNOTICEChanged()
    End Sub
    Partial Private Sub OnNOTICETERMChanging(value As String)
    End Sub
    Partial Private Sub OnNOTICETERMChanged()
    End Sub
    Partial Private Sub OnFGOPTCHRPRChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGOPTCHRPRChanged()
    End Sub
    Partial Private Sub OnFGPRIINFPRChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPRIINFPRChanged()
    End Sub
    Partial Private Sub OnFGAPLINFPRChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGAPLINFPRChanged()
    End Sub
    Partial Private Sub OnFGOPTCHRPOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGOPTCHRPOChanged()
    End Sub
    Partial Private Sub OnFGPRIINFPOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPRIINFPOChanged()
    End Sub
    Partial Private Sub OnFGAPLINFPOChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGAPLINFPOChanged()
    End Sub
    Partial Private Sub OnFGKAIChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGKAIChanged()
    End Sub
    Partial Private Sub OnFGTLCOMChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGTLCOMChanged()
    End Sub
    Partial Private Sub OnVLTTLCOMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVLTTLCOMChanged()
    End Sub
    Partial Private Sub OnIDCREUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCREUSERChanged()
    End Sub
    Partial Private Sub OnDTCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTCREATEChanged()
    End Sub
    Partial Private Sub OnTMCREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMCREATEChanged()
    End Sub
    Partial Private Sub OnIDUPDUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDUPDUSERChanged()
    End Sub
    Partial Private Sub OnDTUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnDTUPDATEChanged()
    End Sub
    Partial Private Sub OnTMUPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnTMUPDATEChanged()
    End Sub
    Partial Private Sub OnFGCOPYChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGCOPYChanged()
    End Sub
    Partial Private Sub OnFGBEFOREChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGBEFOREChanged()
    End Sub
    Partial Private Sub OnFGHISTORYChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGHISTORYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPUBLIC", DbType:="NVarChar(1)")>  _
	Public Property FGPUBLIC() As System.Nullable(Of Char)
		Get
			Return Me._FGPUBLIC
		End Get
		Set
			If (Me._FGPUBLIC.Equals(value) = false) Then
				Me.OnFGPUBLICChanging(value)
				Me.SendPropertyChanging
				Me._FGPUBLIC = value
				Me.SendPropertyChanged("FGPUBLIC")
				Me.OnFGPUBLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGCIRCU", DbType:="NVarChar(1)")>  _
	Public Property FGCIRCU() As System.Nullable(Of Char)
		Get
			Return Me._FGCIRCU
		End Get
		Set
			If (Me._FGCIRCU.Equals(value) = false) Then
				Me.OnFGCIRCUChanging(value)
				Me.SendPropertyChanging
				Me._FGCIRCU = value
				Me.SendPropertyChanged("FGCIRCU")
				Me.OnFGCIRCUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRIDOCCHG", DbType:="NVarChar(1)")>  _
	Public Property FGRIDOCCHG() As System.Nullable(Of Char)
		Get
			Return Me._FGRIDOCCHG
		End Get
		Set
			If (Me._FGRIDOCCHG.Equals(value) = false) Then
				Me.OnFGRIDOCCHGChanging(value)
				Me.SendPropertyChanging
				Me._FGRIDOCCHG = value
				Me.SendPropertyChanged("FGRIDOCCHG")
				Me.OnFGRIDOCCHGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRIDOC", DbType:="NVarChar(1)")>  _
	Public Property FGRIDOC() As System.Nullable(Of Char)
		Get
			Return Me._FGRIDOC
		End Get
		Set
			If (Me._FGRIDOC.Equals(value) = false) Then
				Me.OnFGRIDOCChanging(value)
				Me.SendPropertyChanging
				Me._FGRIDOC = value
				Me.SendPropertyChanged("FGRIDOC")
				Me.OnFGRIDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGCHGSVDOC", DbType:="NVarChar(1)")>  _
	Public Property FGCHGSVDOC() As System.Nullable(Of Char)
		Get
			Return Me._FGCHGSVDOC
		End Get
		Set
			If (Me._FGCHGSVDOC.Equals(value) = false) Then
				Me.OnFGCHGSVDOCChanging(value)
				Me.SendPropertyChanging
				Me._FGCHGSVDOC = value
				Me.SendPropertyChanged("FGCHGSVDOC")
				Me.OnFGCHGSVDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPUBDOC", DbType:="NVarChar(64)")>  _
	Public Property IDPUBDOC() As String
		Get
			Return Me._IDPUBDOC
		End Get
		Set
			If (String.Equals(Me._IDPUBDOC, value) = false) Then
				Me.OnIDPUBDOCChanging(value)
				Me.SendPropertyChanging
				Me._IDPUBDOC = value
				Me.SendPropertyChanged("IDPUBDOC")
				Me.OnIDPUBDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPUBFODOC", DbType:="NVarChar(64)")>  _
	Public Property IDPUBFODOC() As String
		Get
			Return Me._IDPUBFODOC
		End Get
		Set
			If (String.Equals(Me._IDPUBFODOC, value) = false) Then
				Me.OnIDPUBFODOCChanging(value)
				Me.SendPropertyChanging
				Me._IDPUBFODOC = value
				Me.SendPropertyChanged("IDPUBFODOC")
				Me.OnIDPUBFODOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMPUBDOC", DbType:="NVarChar(500)")>  _
	Public Property NMPUBDOC() As String
		Get
			Return Me._NMPUBDOC
		End Get
		Set
			If (String.Equals(Me._NMPUBDOC, value) = false) Then
				Me.OnNMPUBDOCChanging(value)
				Me.SendPropertyChanging
				Me._NMPUBDOC = value
				Me.SendPropertyChanged("NMPUBDOC")
				Me.OnNMPUBDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNYDOC", DbType:="NVarChar(64)")>  _
	Public Property IDNYDOC() As String
		Get
			Return Me._IDNYDOC
		End Get
		Set
			If (String.Equals(Me._IDNYDOC, value) = false) Then
				Me.OnIDNYDOCChanging(value)
				Me.SendPropertyChanging
				Me._IDNYDOC = value
				Me.SendPropertyChanged("IDNYDOC")
				Me.OnIDNYDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNYFODOC", DbType:="NVarChar(64)")>  _
	Public Property IDNYFODOC() As String
		Get
			Return Me._IDNYFODOC
		End Get
		Set
			If (String.Equals(Me._IDNYFODOC, value) = false) Then
				Me.OnIDNYFODOCChanging(value)
				Me.SendPropertyChanging
				Me._IDNYFODOC = value
				Me.SendPropertyChanged("IDNYFODOC")
				Me.OnIDNYFODOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NMNYDOC", DbType:="NVarChar(500)")>  _
	Public Property NMNYDOC() As String
		Get
			Return Me._NMNYDOC
		End Get
		Set
			If (String.Equals(Me._NMNYDOC, value) = false) Then
				Me.OnNMNYDOCChanging(value)
				Me.SendPropertyChanging
				Me._NMNYDOC = value
				Me.SendPropertyChanged("NMNYDOC")
				Me.OnNMNYDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGCPYDOC", DbType:="NVarChar(1)")>  _
	Public Property FGCPYDOC() As System.Nullable(Of Char)
		Get
			Return Me._FGCPYDOC
		End Get
		Set
			If (Me._FGCPYDOC.Equals(value) = false) Then
				Me.OnFGCPYDOCChanging(value)
				Me.SendPropertyChanging
				Me._FGCPYDOC = value
				Me.SendPropertyChanged("FGCPYDOC")
				Me.OnFGCPYDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGMALMAKE", DbType:="NVarChar(1)")>  _
	Public Property FGMALMAKE() As System.Nullable(Of Char)
		Get
			Return Me._FGMALMAKE
		End Get
		Set
			If (Me._FGMALMAKE.Equals(value) = false) Then
				Me.OnFGMALMAKEChanging(value)
				Me.SendPropertyChanging
				Me._FGMALMAKE = value
				Me.SendPropertyChanged("FGMALMAKE")
				Me.OnFGMALMAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGMALACEPT", DbType:="NVarChar(1)")>  _
	Public Property FGMALACEPT() As System.Nullable(Of Char)
		Get
			Return Me._FGMALACEPT
		End Get
		Set
			If (Me._FGMALACEPT.Equals(value) = false) Then
				Me.OnFGMALACEPTChanging(value)
				Me.SendPropertyChanging
				Me._FGMALACEPT = value
				Me.SendPropertyChanged("FGMALACEPT")
				Me.OnFGMALACEPTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGMALSUBMIT", DbType:="NVarChar(1)")>  _
	Public Property FGMALSUBMIT() As System.Nullable(Of Char)
		Get
			Return Me._FGMALSUBMIT
		End Get
		Set
			If (Me._FGMALSUBMIT.Equals(value) = false) Then
				Me.OnFGMALSUBMITChanging(value)
				Me.SendPropertyChanging
				Me._FGMALSUBMIT = value
				Me.SendPropertyChanged("FGMALSUBMIT")
				Me.OnFGMALSUBMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGMALDENY", DbType:="NVarChar(1)")>  _
	Public Property FGMALDENY() As System.Nullable(Of Char)
		Get
			Return Me._FGMALDENY
		End Get
		Set
			If (Me._FGMALDENY.Equals(value) = false) Then
				Me.OnFGMALDENYChanging(value)
				Me.SendPropertyChanging
				Me._FGMALDENY = value
				Me.SendPropertyChanged("FGMALDENY")
				Me.OnFGMALDENYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGMALREMAND", DbType:="NVarChar(1)")>  _
	Public Property FGMALREMAND() As System.Nullable(Of Char)
		Get
			Return Me._FGMALREMAND
		End Get
		Set
			If (Me._FGMALREMAND.Equals(value) = false) Then
				Me.OnFGMALREMANDChanging(value)
				Me.SendPropertyChanging
				Me._FGMALREMAND = value
				Me.SendPropertyChanged("FGMALREMAND")
				Me.OnFGMALREMANDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGUPDCIRCU", DbType:="NVarChar(1)")>  _
	Public Property FGUPDCIRCU() As System.Nullable(Of Char)
		Get
			Return Me._FGUPDCIRCU
		End Get
		Set
			If (Me._FGUPDCIRCU.Equals(value) = false) Then
				Me.OnFGUPDCIRCUChanging(value)
				Me.SendPropertyChanging
				Me._FGUPDCIRCU = value
				Me.SendPropertyChanged("FGUPDCIRCU")
				Me.OnFGUPDCIRCUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGREPRE", DbType:="NVarChar(1)")>  _
	Public Property FGREPRE() As System.Nullable(Of Char)
		Get
			Return Me._FGREPRE
		End Get
		Set
			If (Me._FGREPRE.Equals(value) = false) Then
				Me.OnFGREPREChanging(value)
				Me.SendPropertyChanging
				Me._FGREPRE = value
				Me.SendPropertyChanged("FGREPRE")
				Me.OnFGREPREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGDOCNO", DbType:="NVarChar(1)")>  _
	Public Property FGDOCNO() As System.Nullable(Of Char)
		Get
			Return Me._FGDOCNO
		End Get
		Set
			If (Me._FGDOCNO.Equals(value) = false) Then
				Me.OnFGDOCNOChanging(value)
				Me.SendPropertyChanging
				Me._FGDOCNO = value
				Me.SendPropertyChanged("FGDOCNO")
				Me.OnFGDOCNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLDOCNOFIG", DbType:="Int")>  _
	Public Property VLDOCNOFIG() As System.Nullable(Of Integer)
		Get
			Return Me._VLDOCNOFIG
		End Get
		Set
			If (Me._VLDOCNOFIG.Equals(value) = false) Then
				Me.OnVLDOCNOFIGChanging(value)
				Me.SendPropertyChanging
				Me._VLDOCNOFIG = value
				Me.SendPropertyChanged("VLDOCNOFIG")
				Me.OnVLDOCNOFIGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGTL", DbType:="NVarChar(1)")>  _
	Public Property FGTL() As System.Nullable(Of Char)
		Get
			Return Me._FGTL
		End Get
		Set
			If (Me._FGTL.Equals(value) = false) Then
				Me.OnFGTLChanging(value)
				Me.SendPropertyChanging
				Me._FGTL = value
				Me.SendPropertyChanged("FGTL")
				Me.OnFGTLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLTTL", DbType:="Int")>  _
	Public Property VLTTL() As System.Nullable(Of Integer)
		Get
			Return Me._VLTTL
		End Get
		Set
			If (Me._VLTTL.Equals(value) = false) Then
				Me.OnVLTTLChanging(value)
				Me.SendPropertyChanging
				Me._VLTTL = value
				Me.SendPropertyChanged("VLTTL")
				Me.OnVLTTLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGROUTBTN", DbType:="NVarChar(1)")>  _
	Public Property FGROUTBTN() As System.Nullable(Of Char)
		Get
			Return Me._FGROUTBTN
		End Get
		Set
			If (Me._FGROUTBTN.Equals(value) = false) Then
				Me.OnFGROUTBTNChanging(value)
				Me.SendPropertyChanging
				Me._FGROUTBTN = value
				Me.SendPropertyChanged("FGROUTBTN")
				Me.OnFGROUTBTNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSETPUB", DbType:="NVarChar(1)")>  _
	Public Property FGSETPUB() As System.Nullable(Of Char)
		Get
			Return Me._FGSETPUB
		End Get
		Set
			If (Me._FGSETPUB.Equals(value) = false) Then
				Me.OnFGSETPUBChanging(value)
				Me.SendPropertyChanging
				Me._FGSETPUB = value
				Me.SendPropertyChanged("FGSETPUB")
				Me.OnFGSETPUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGBTNPRINT", DbType:="NVarChar(1)")>  _
	Public Property FGBTNPRINT() As System.Nullable(Of Char)
		Get
			Return Me._FGBTNPRINT
		End Get
		Set
			If (Me._FGBTNPRINT.Equals(value) = false) Then
				Me.OnFGBTNPRINTChanging(value)
				Me.SendPropertyChanging
				Me._FGBTNPRINT = value
				Me.SendPropertyChanged("FGBTNPRINT")
				Me.OnFGBTNPRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGALLFIND", DbType:="NVarChar(1)")>  _
	Public Property FGALLFIND() As System.Nullable(Of Char)
		Get
			Return Me._FGALLFIND
		End Get
		Set
			If (Me._FGALLFIND.Equals(value) = false) Then
				Me.OnFGALLFINDChanging(value)
				Me.SendPropertyChanging
				Me._FGALLFIND = value
				Me.SendPropertyChanged("FGALLFIND")
				Me.OnFGALLFINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPDFSAVE", DbType:="NVarChar(1)")>  _
	Public Property FGPDFSAVE() As System.Nullable(Of Char)
		Get
			Return Me._FGPDFSAVE
		End Get
		Set
			If (Me._FGPDFSAVE.Equals(value) = false) Then
				Me.OnFGPDFSAVEChanging(value)
				Me.SendPropertyChanging
				Me._FGPDFSAVE = value
				Me.SendPropertyChanged("FGPDFSAVE")
				Me.OnFGPDFSAVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGNOTICE", DbType:="NVarChar(1)")>  _
	Public Property FGNOTICE() As System.Nullable(Of Char)
		Get
			Return Me._FGNOTICE
		End Get
		Set
			If (Me._FGNOTICE.Equals(value) = false) Then
				Me.OnFGNOTICEChanging(value)
				Me.SendPropertyChanging
				Me._FGNOTICE = value
				Me.SendPropertyChanged("FGNOTICE")
				Me.OnFGNOTICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTICETERM", DbType:="NVarChar(10)")>  _
	Public Property NOTICETERM() As String
		Get
			Return Me._NOTICETERM
		End Get
		Set
			If (String.Equals(Me._NOTICETERM, value) = false) Then
				Me.OnNOTICETERMChanging(value)
				Me.SendPropertyChanging
				Me._NOTICETERM = value
				Me.SendPropertyChanged("NOTICETERM")
				Me.OnNOTICETERMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGOPTCHRPR", DbType:="NVarChar(1)")>  _
	Public Property FGOPTCHRPR() As System.Nullable(Of Char)
		Get
			Return Me._FGOPTCHRPR
		End Get
		Set
			If (Me._FGOPTCHRPR.Equals(value) = false) Then
				Me.OnFGOPTCHRPRChanging(value)
				Me.SendPropertyChanging
				Me._FGOPTCHRPR = value
				Me.SendPropertyChanged("FGOPTCHRPR")
				Me.OnFGOPTCHRPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPRIINFPR", DbType:="NVarChar(1)")>  _
	Public Property FGPRIINFPR() As System.Nullable(Of Char)
		Get
			Return Me._FGPRIINFPR
		End Get
		Set
			If (Me._FGPRIINFPR.Equals(value) = false) Then
				Me.OnFGPRIINFPRChanging(value)
				Me.SendPropertyChanging
				Me._FGPRIINFPR = value
				Me.SendPropertyChanged("FGPRIINFPR")
				Me.OnFGPRIINFPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGAPLINFPR", DbType:="NVarChar(1)")>  _
	Public Property FGAPLINFPR() As System.Nullable(Of Char)
		Get
			Return Me._FGAPLINFPR
		End Get
		Set
			If (Me._FGAPLINFPR.Equals(value) = false) Then
				Me.OnFGAPLINFPRChanging(value)
				Me.SendPropertyChanging
				Me._FGAPLINFPR = value
				Me.SendPropertyChanged("FGAPLINFPR")
				Me.OnFGAPLINFPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGOPTCHRPO", DbType:="NVarChar(1)")>  _
	Public Property FGOPTCHRPO() As System.Nullable(Of Char)
		Get
			Return Me._FGOPTCHRPO
		End Get
		Set
			If (Me._FGOPTCHRPO.Equals(value) = false) Then
				Me.OnFGOPTCHRPOChanging(value)
				Me.SendPropertyChanging
				Me._FGOPTCHRPO = value
				Me.SendPropertyChanged("FGOPTCHRPO")
				Me.OnFGOPTCHRPOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPRIINFPO", DbType:="NVarChar(1)")>  _
	Public Property FGPRIINFPO() As System.Nullable(Of Char)
		Get
			Return Me._FGPRIINFPO
		End Get
		Set
			If (Me._FGPRIINFPO.Equals(value) = false) Then
				Me.OnFGPRIINFPOChanging(value)
				Me.SendPropertyChanging
				Me._FGPRIINFPO = value
				Me.SendPropertyChanged("FGPRIINFPO")
				Me.OnFGPRIINFPOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGAPLINFPO", DbType:="NVarChar(1)")>  _
	Public Property FGAPLINFPO() As System.Nullable(Of Char)
		Get
			Return Me._FGAPLINFPO
		End Get
		Set
			If (Me._FGAPLINFPO.Equals(value) = false) Then
				Me.OnFGAPLINFPOChanging(value)
				Me.SendPropertyChanging
				Me._FGAPLINFPO = value
				Me.SendPropertyChanged("FGAPLINFPO")
				Me.OnFGAPLINFPOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGKAI", DbType:="NVarChar(1)")>  _
	Public Property FGKAI() As System.Nullable(Of Char)
		Get
			Return Me._FGKAI
		End Get
		Set
			If (Me._FGKAI.Equals(value) = false) Then
				Me.OnFGKAIChanging(value)
				Me.SendPropertyChanging
				Me._FGKAI = value
				Me.SendPropertyChanged("FGKAI")
				Me.OnFGKAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGTLCOM", DbType:="NVarChar(1)")>  _
	Public Property FGTLCOM() As System.Nullable(Of Char)
		Get
			Return Me._FGTLCOM
		End Get
		Set
			If (Me._FGTLCOM.Equals(value) = false) Then
				Me.OnFGTLCOMChanging(value)
				Me.SendPropertyChanging
				Me._FGTLCOM = value
				Me.SendPropertyChanged("FGTLCOM")
				Me.OnFGTLCOMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLTTLCOM", DbType:="Int")>  _
	Public Property VLTTLCOM() As System.Nullable(Of Integer)
		Get
			Return Me._VLTTLCOM
		End Get
		Set
			If (Me._VLTTLCOM.Equals(value) = false) Then
				Me.OnVLTTLCOMChanging(value)
				Me.SendPropertyChanging
				Me._VLTTLCOM = value
				Me.SendPropertyChanged("VLTTLCOM")
				Me.OnVLTTLCOMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCREUSER", DbType:="Int")>  _
	Public Property IDCREUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDCREUSER
		End Get
		Set
			If (Me._IDCREUSER.Equals(value) = false) Then
				Me.OnIDCREUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDCREUSER = value
				Me.SendPropertyChanged("IDCREUSER")
				Me.OnIDCREUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTCREATE", DbType:="NVarChar(10)")>  _
	Public Property DTCREATE() As String
		Get
			Return Me._DTCREATE
		End Get
		Set
			If (String.Equals(Me._DTCREATE, value) = false) Then
				Me.OnDTCREATEChanging(value)
				Me.SendPropertyChanging
				Me._DTCREATE = value
				Me.SendPropertyChanged("DTCREATE")
				Me.OnDTCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMCREATE", DbType:="NVarChar(8)")>  _
	Public Property TMCREATE() As String
		Get
			Return Me._TMCREATE
		End Get
		Set
			If (String.Equals(Me._TMCREATE, value) = false) Then
				Me.OnTMCREATEChanging(value)
				Me.SendPropertyChanging
				Me._TMCREATE = value
				Me.SendPropertyChanged("TMCREATE")
				Me.OnTMCREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUPDUSER", DbType:="Int")>  _
	Public Property IDUPDUSER() As System.Nullable(Of Integer)
		Get
			Return Me._IDUPDUSER
		End Get
		Set
			If (Me._IDUPDUSER.Equals(value) = false) Then
				Me.OnIDUPDUSERChanging(value)
				Me.SendPropertyChanging
				Me._IDUPDUSER = value
				Me.SendPropertyChanged("IDUPDUSER")
				Me.OnIDUPDUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTUPDATE", DbType:="NVarChar(10)")>  _
	Public Property DTUPDATE() As String
		Get
			Return Me._DTUPDATE
		End Get
		Set
			If (String.Equals(Me._DTUPDATE, value) = false) Then
				Me.OnDTUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DTUPDATE = value
				Me.SendPropertyChanged("DTUPDATE")
				Me.OnDTUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMUPDATE", DbType:="NVarChar(8)")>  _
	Public Property TMUPDATE() As String
		Get
			Return Me._TMUPDATE
		End Get
		Set
			If (String.Equals(Me._TMUPDATE, value) = false) Then
				Me.OnTMUPDATEChanging(value)
				Me.SendPropertyChanging
				Me._TMUPDATE = value
				Me.SendPropertyChanged("TMUPDATE")
				Me.OnTMUPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGCOPY", DbType:="NVarChar(1)")>  _
	Public Property FGCOPY() As System.Nullable(Of Char)
		Get
			Return Me._FGCOPY
		End Get
		Set
			If (Me._FGCOPY.Equals(value) = false) Then
				Me.OnFGCOPYChanging(value)
				Me.SendPropertyChanging
				Me._FGCOPY = value
				Me.SendPropertyChanged("FGCOPY")
				Me.OnFGCOPYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGBEFORE", DbType:="NVarChar(1)")>  _
	Public Property FGBEFORE() As System.Nullable(Of Char)
		Get
			Return Me._FGBEFORE
		End Get
		Set
			If (Me._FGBEFORE.Equals(value) = false) Then
				Me.OnFGBEFOREChanging(value)
				Me.SendPropertyChanging
				Me._FGBEFORE = value
				Me.SendPropertyChanged("FGBEFORE")
				Me.OnFGBEFOREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGHISTORY", DbType:="NVarChar(1)")>  _
	Public Property FGHISTORY() As System.Nullable(Of Char)
		Get
			Return Me._FGHISTORY
		End Get
		Set
			If (Me._FGHISTORY.Equals(value) = false) Then
				Me.OnFGHISTORYChanging(value)
				Me.SendPropertyChanging
				Me._FGHISTORY = value
				Me.SendPropertyChanged("FGHISTORY")
				Me.OnFGHISTORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0007", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.EGGA0007 = Nothing
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EGGA0007 = Me
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EGGA0007EX")>  _
Partial Public Class EGGA0007EX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _STEMAIL As String
	
	Private _STMEMO As String
	
	Private _FGROUTE As System.Nullable(Of Char)
	
	Private _STEMAILMEMO As String
	
	Private _FGREFMAIL As System.Nullable(Of Char)
	
	Private _FGREFORG As System.Nullable(Of Char)
	
	Private _FGREFGROUP As System.Nullable(Of Char)
	
	Private _FGBEFORG As System.Nullable(Of Char)
	
	Private _FGBEFGROUP As System.Nullable(Of Char)
	
	Private _FGSNDMAIL As System.Nullable(Of Char)
	
	Private _FGSNDMAILP As System.Nullable(Of Char)
	
	Private _FGSNDORG As System.Nullable(Of Char)
	
	Private _FGSNDGROUP As System.Nullable(Of Char)
	
	Private _FGRESMAIL As System.Nullable(Of Char)
	
	Private _FGRESMAILP As System.Nullable(Of Char)
	
	Private _FGRESORG As System.Nullable(Of Char)
	
	Private _FGRESGROUP As System.Nullable(Of Char)
	
	Private _FGFORMADMIN As System.Nullable(Of Char)
	
	Private _FGSYSADMIN As System.Nullable(Of Char)
	
	Private _LVPOWER As System.Nullable(Of Integer)
	
	Private _FGSOURCESAFE As System.Nullable(Of Char)
	
	Private _FGPULLBACK As System.Nullable(Of Char)
	
	Private _FGSHARE As System.Nullable(Of Char)
	
	Private _FGCHANGEROUTE As System.Nullable(Of Char)
	
	Private _FGPRINTMAKE As System.Nullable(Of Char)
	
	Private _FGHISTORYMAKE As System.Nullable(Of Char)
	
	Private _FGROUTEGROUP As Char
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnSTEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnSTEMAILChanged()
    End Sub
    Partial Private Sub OnSTMEMOChanging(value As String)
    End Sub
    Partial Private Sub OnSTMEMOChanged()
    End Sub
    Partial Private Sub OnFGROUTEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGROUTEChanged()
    End Sub
    Partial Private Sub OnSTEMAILMEMOChanging(value As String)
    End Sub
    Partial Private Sub OnSTEMAILMEMOChanged()
    End Sub
    Partial Private Sub OnFGREFMAILChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGREFMAILChanged()
    End Sub
    Partial Private Sub OnFGREFORGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGREFORGChanged()
    End Sub
    Partial Private Sub OnFGREFGROUPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGREFGROUPChanged()
    End Sub
    Partial Private Sub OnFGBEFORGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGBEFORGChanged()
    End Sub
    Partial Private Sub OnFGBEFGROUPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGBEFGROUPChanged()
    End Sub
    Partial Private Sub OnFGSNDMAILChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSNDMAILChanged()
    End Sub
    Partial Private Sub OnFGSNDMAILPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSNDMAILPChanged()
    End Sub
    Partial Private Sub OnFGSNDORGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSNDORGChanged()
    End Sub
    Partial Private Sub OnFGSNDGROUPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSNDGROUPChanged()
    End Sub
    Partial Private Sub OnFGRESMAILChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRESMAILChanged()
    End Sub
    Partial Private Sub OnFGRESMAILPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRESMAILPChanged()
    End Sub
    Partial Private Sub OnFGRESORGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRESORGChanged()
    End Sub
    Partial Private Sub OnFGRESGROUPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGRESGROUPChanged()
    End Sub
    Partial Private Sub OnFGFORMADMINChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGFORMADMINChanged()
    End Sub
    Partial Private Sub OnFGSYSADMINChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSYSADMINChanged()
    End Sub
    Partial Private Sub OnLVPOWERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLVPOWERChanged()
    End Sub
    Partial Private Sub OnFGSOURCESAFEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSOURCESAFEChanged()
    End Sub
    Partial Private Sub OnFGPULLBACKChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPULLBACKChanged()
    End Sub
    Partial Private Sub OnFGSHAREChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGSHAREChanged()
    End Sub
    Partial Private Sub OnFGCHANGEROUTEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGCHANGEROUTEChanged()
    End Sub
    Partial Private Sub OnFGPRINTMAKEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGPRINTMAKEChanged()
    End Sub
    Partial Private Sub OnFGHISTORYMAKEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFGHISTORYMAKEChanged()
    End Sub
    Partial Private Sub OnFGROUTEGROUPChanging(value As Char)
    End Sub
    Partial Private Sub OnFGROUTEGROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STEMAIL", DbType:="NVarChar(64)")>  _
	Public Property STEMAIL() As String
		Get
			Return Me._STEMAIL
		End Get
		Set
			If (String.Equals(Me._STEMAIL, value) = false) Then
				Me.OnSTEMAILChanging(value)
				Me.SendPropertyChanging
				Me._STEMAIL = value
				Me.SendPropertyChanged("STEMAIL")
				Me.OnSTEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STMEMO", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STMEMO() As String
		Get
			Return Me._STMEMO
		End Get
		Set
			If (String.Equals(Me._STMEMO, value) = false) Then
				Me.OnSTMEMOChanging(value)
				Me.SendPropertyChanging
				Me._STMEMO = value
				Me.SendPropertyChanged("STMEMO")
				Me.OnSTMEMOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGROUTE", DbType:="NVarChar(1)")>  _
	Public Property FGROUTE() As System.Nullable(Of Char)
		Get
			Return Me._FGROUTE
		End Get
		Set
			If (Me._FGROUTE.Equals(value) = false) Then
				Me.OnFGROUTEChanging(value)
				Me.SendPropertyChanging
				Me._FGROUTE = value
				Me.SendPropertyChanged("FGROUTE")
				Me.OnFGROUTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STEMAILMEMO", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property STEMAILMEMO() As String
		Get
			Return Me._STEMAILMEMO
		End Get
		Set
			If (String.Equals(Me._STEMAILMEMO, value) = false) Then
				Me.OnSTEMAILMEMOChanging(value)
				Me.SendPropertyChanging
				Me._STEMAILMEMO = value
				Me.SendPropertyChanged("STEMAILMEMO")
				Me.OnSTEMAILMEMOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGREFMAIL", DbType:="NVarChar(1)")>  _
	Public Property FGREFMAIL() As System.Nullable(Of Char)
		Get
			Return Me._FGREFMAIL
		End Get
		Set
			If (Me._FGREFMAIL.Equals(value) = false) Then
				Me.OnFGREFMAILChanging(value)
				Me.SendPropertyChanging
				Me._FGREFMAIL = value
				Me.SendPropertyChanged("FGREFMAIL")
				Me.OnFGREFMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGREFORG", DbType:="NVarChar(1)")>  _
	Public Property FGREFORG() As System.Nullable(Of Char)
		Get
			Return Me._FGREFORG
		End Get
		Set
			If (Me._FGREFORG.Equals(value) = false) Then
				Me.OnFGREFORGChanging(value)
				Me.SendPropertyChanging
				Me._FGREFORG = value
				Me.SendPropertyChanged("FGREFORG")
				Me.OnFGREFORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGREFGROUP", DbType:="NVarChar(1)")>  _
	Public Property FGREFGROUP() As System.Nullable(Of Char)
		Get
			Return Me._FGREFGROUP
		End Get
		Set
			If (Me._FGREFGROUP.Equals(value) = false) Then
				Me.OnFGREFGROUPChanging(value)
				Me.SendPropertyChanging
				Me._FGREFGROUP = value
				Me.SendPropertyChanged("FGREFGROUP")
				Me.OnFGREFGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGBEFORG", DbType:="NVarChar(1)")>  _
	Public Property FGBEFORG() As System.Nullable(Of Char)
		Get
			Return Me._FGBEFORG
		End Get
		Set
			If (Me._FGBEFORG.Equals(value) = false) Then
				Me.OnFGBEFORGChanging(value)
				Me.SendPropertyChanging
				Me._FGBEFORG = value
				Me.SendPropertyChanged("FGBEFORG")
				Me.OnFGBEFORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGBEFGROUP", DbType:="NVarChar(1)")>  _
	Public Property FGBEFGROUP() As System.Nullable(Of Char)
		Get
			Return Me._FGBEFGROUP
		End Get
		Set
			If (Me._FGBEFGROUP.Equals(value) = false) Then
				Me.OnFGBEFGROUPChanging(value)
				Me.SendPropertyChanging
				Me._FGBEFGROUP = value
				Me.SendPropertyChanged("FGBEFGROUP")
				Me.OnFGBEFGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSNDMAIL", DbType:="NVarChar(1)")>  _
	Public Property FGSNDMAIL() As System.Nullable(Of Char)
		Get
			Return Me._FGSNDMAIL
		End Get
		Set
			If (Me._FGSNDMAIL.Equals(value) = false) Then
				Me.OnFGSNDMAILChanging(value)
				Me.SendPropertyChanging
				Me._FGSNDMAIL = value
				Me.SendPropertyChanged("FGSNDMAIL")
				Me.OnFGSNDMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSNDMAILP", DbType:="NVarChar(1)")>  _
	Public Property FGSNDMAILP() As System.Nullable(Of Char)
		Get
			Return Me._FGSNDMAILP
		End Get
		Set
			If (Me._FGSNDMAILP.Equals(value) = false) Then
				Me.OnFGSNDMAILPChanging(value)
				Me.SendPropertyChanging
				Me._FGSNDMAILP = value
				Me.SendPropertyChanged("FGSNDMAILP")
				Me.OnFGSNDMAILPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSNDORG", DbType:="NVarChar(1)")>  _
	Public Property FGSNDORG() As System.Nullable(Of Char)
		Get
			Return Me._FGSNDORG
		End Get
		Set
			If (Me._FGSNDORG.Equals(value) = false) Then
				Me.OnFGSNDORGChanging(value)
				Me.SendPropertyChanging
				Me._FGSNDORG = value
				Me.SendPropertyChanged("FGSNDORG")
				Me.OnFGSNDORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSNDGROUP", DbType:="NVarChar(1)")>  _
	Public Property FGSNDGROUP() As System.Nullable(Of Char)
		Get
			Return Me._FGSNDGROUP
		End Get
		Set
			If (Me._FGSNDGROUP.Equals(value) = false) Then
				Me.OnFGSNDGROUPChanging(value)
				Me.SendPropertyChanging
				Me._FGSNDGROUP = value
				Me.SendPropertyChanged("FGSNDGROUP")
				Me.OnFGSNDGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRESMAIL", DbType:="NVarChar(1)")>  _
	Public Property FGRESMAIL() As System.Nullable(Of Char)
		Get
			Return Me._FGRESMAIL
		End Get
		Set
			If (Me._FGRESMAIL.Equals(value) = false) Then
				Me.OnFGRESMAILChanging(value)
				Me.SendPropertyChanging
				Me._FGRESMAIL = value
				Me.SendPropertyChanged("FGRESMAIL")
				Me.OnFGRESMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRESMAILP", DbType:="NVarChar(1)")>  _
	Public Property FGRESMAILP() As System.Nullable(Of Char)
		Get
			Return Me._FGRESMAILP
		End Get
		Set
			If (Me._FGRESMAILP.Equals(value) = false) Then
				Me.OnFGRESMAILPChanging(value)
				Me.SendPropertyChanging
				Me._FGRESMAILP = value
				Me.SendPropertyChanged("FGRESMAILP")
				Me.OnFGRESMAILPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRESORG", DbType:="NVarChar(1)")>  _
	Public Property FGRESORG() As System.Nullable(Of Char)
		Get
			Return Me._FGRESORG
		End Get
		Set
			If (Me._FGRESORG.Equals(value) = false) Then
				Me.OnFGRESORGChanging(value)
				Me.SendPropertyChanging
				Me._FGRESORG = value
				Me.SendPropertyChanged("FGRESORG")
				Me.OnFGRESORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGRESGROUP", DbType:="NVarChar(1)")>  _
	Public Property FGRESGROUP() As System.Nullable(Of Char)
		Get
			Return Me._FGRESGROUP
		End Get
		Set
			If (Me._FGRESGROUP.Equals(value) = false) Then
				Me.OnFGRESGROUPChanging(value)
				Me.SendPropertyChanging
				Me._FGRESGROUP = value
				Me.SendPropertyChanged("FGRESGROUP")
				Me.OnFGRESGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGFORMADMIN", DbType:="NVarChar(1)")>  _
	Public Property FGFORMADMIN() As System.Nullable(Of Char)
		Get
			Return Me._FGFORMADMIN
		End Get
		Set
			If (Me._FGFORMADMIN.Equals(value) = false) Then
				Me.OnFGFORMADMINChanging(value)
				Me.SendPropertyChanging
				Me._FGFORMADMIN = value
				Me.SendPropertyChanged("FGFORMADMIN")
				Me.OnFGFORMADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSYSADMIN", DbType:="NVarChar(1)")>  _
	Public Property FGSYSADMIN() As System.Nullable(Of Char)
		Get
			Return Me._FGSYSADMIN
		End Get
		Set
			If (Me._FGSYSADMIN.Equals(value) = false) Then
				Me.OnFGSYSADMINChanging(value)
				Me.SendPropertyChanging
				Me._FGSYSADMIN = value
				Me.SendPropertyChanged("FGSYSADMIN")
				Me.OnFGSYSADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LVPOWER", DbType:="Int")>  _
	Public Property LVPOWER() As System.Nullable(Of Integer)
		Get
			Return Me._LVPOWER
		End Get
		Set
			If (Me._LVPOWER.Equals(value) = false) Then
				Me.OnLVPOWERChanging(value)
				Me.SendPropertyChanging
				Me._LVPOWER = value
				Me.SendPropertyChanged("LVPOWER")
				Me.OnLVPOWERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSOURCESAFE", DbType:="NVarChar(1)")>  _
	Public Property FGSOURCESAFE() As System.Nullable(Of Char)
		Get
			Return Me._FGSOURCESAFE
		End Get
		Set
			If (Me._FGSOURCESAFE.Equals(value) = false) Then
				Me.OnFGSOURCESAFEChanging(value)
				Me.SendPropertyChanging
				Me._FGSOURCESAFE = value
				Me.SendPropertyChanged("FGSOURCESAFE")
				Me.OnFGSOURCESAFEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPULLBACK", DbType:="NVarChar(1)")>  _
	Public Property FGPULLBACK() As System.Nullable(Of Char)
		Get
			Return Me._FGPULLBACK
		End Get
		Set
			If (Me._FGPULLBACK.Equals(value) = false) Then
				Me.OnFGPULLBACKChanging(value)
				Me.SendPropertyChanging
				Me._FGPULLBACK = value
				Me.SendPropertyChanged("FGPULLBACK")
				Me.OnFGPULLBACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGSHARE", DbType:="NVarChar(1)")>  _
	Public Property FGSHARE() As System.Nullable(Of Char)
		Get
			Return Me._FGSHARE
		End Get
		Set
			If (Me._FGSHARE.Equals(value) = false) Then
				Me.OnFGSHAREChanging(value)
				Me.SendPropertyChanging
				Me._FGSHARE = value
				Me.SendPropertyChanged("FGSHARE")
				Me.OnFGSHAREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGCHANGEROUTE", DbType:="NVarChar(1)")>  _
	Public Property FGCHANGEROUTE() As System.Nullable(Of Char)
		Get
			Return Me._FGCHANGEROUTE
		End Get
		Set
			If (Me._FGCHANGEROUTE.Equals(value) = false) Then
				Me.OnFGCHANGEROUTEChanging(value)
				Me.SendPropertyChanging
				Me._FGCHANGEROUTE = value
				Me.SendPropertyChanged("FGCHANGEROUTE")
				Me.OnFGCHANGEROUTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGPRINTMAKE", DbType:="NVarChar(1)")>  _
	Public Property FGPRINTMAKE() As System.Nullable(Of Char)
		Get
			Return Me._FGPRINTMAKE
		End Get
		Set
			If (Me._FGPRINTMAKE.Equals(value) = false) Then
				Me.OnFGPRINTMAKEChanging(value)
				Me.SendPropertyChanging
				Me._FGPRINTMAKE = value
				Me.SendPropertyChanged("FGPRINTMAKE")
				Me.OnFGPRINTMAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGHISTORYMAKE", DbType:="NVarChar(1)")>  _
	Public Property FGHISTORYMAKE() As System.Nullable(Of Char)
		Get
			Return Me._FGHISTORYMAKE
		End Get
		Set
			If (Me._FGHISTORYMAKE.Equals(value) = false) Then
				Me.OnFGHISTORYMAKEChanging(value)
				Me.SendPropertyChanging
				Me._FGHISTORYMAKE = value
				Me.SendPropertyChanged("FGHISTORYMAKE")
				Me.OnFGHISTORYMAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FGROUTEGROUP", DbType:="NVarChar(1) NOT NULL")>  _
	Public Property FGROUTEGROUP() As Char
		Get
			Return Me._FGROUTEGROUP
		End Get
		Set
			If ((Me._FGROUTEGROUP = value)  _
						= false) Then
				Me.OnFGROUTEGROUPChanging(value)
				Me.SendPropertyChanging
				Me._FGROUTEGROUP = value
				Me.SendPropertyChanged("FGROUTEGROUP")
				Me.OnFGROUTEGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0007EX", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.EGGA0007EX = Nothing
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EGGA0007EX = Me
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EGGA0013")>  _
Partial Public Class EGGA0013
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDFRM As Integer
	
	Private _SEQNO As Integer
	
	Private _IDSYSGROUP As Integer
	
	Private _IDSYSBLG As Integer
	
	Private _DTENTRY As String
	
	Private _TPORGACOND As Integer
	
	Private _TPEMP As String
	
	Private _FRMF1000 As EntityRef(Of FRMF1000)
	
    #Region "拡張メソッドの定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFRMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFRMChanged()
    End Sub
    Partial Private Sub OnSEQNOChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEQNOChanged()
    End Sub
    Partial Private Sub OnIDSYSGROUPChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSYSGROUPChanged()
    End Sub
    Partial Private Sub OnIDSYSBLGChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSYSBLGChanged()
    End Sub
    Partial Private Sub OnDTENTRYChanging(value As String)
    End Sub
    Partial Private Sub OnDTENTRYChanged()
    End Sub
    Partial Private Sub OnTPORGACONDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPORGACONDChanged()
    End Sub
    Partial Private Sub OnTPEMPChanging(value As String)
    End Sub
    Partial Private Sub OnTPEMPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FRMF1000 = CType(Nothing, EntityRef(Of FRMF1000))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFRM", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDFRM() As Integer
		Get
			Return Me._IDFRM
		End Get
		Set
			If ((Me._IDFRM = value)  _
						= false) Then
				If Me._FRMF1000.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFRMChanging(value)
				Me.SendPropertyChanging
				Me._IDFRM = value
				Me.SendPropertyChanged("IDFRM")
				Me.OnIDFRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQNO", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SEQNO() As Integer
		Get
			Return Me._SEQNO
		End Get
		Set
			If ((Me._SEQNO = value)  _
						= false) Then
				Me.OnSEQNOChanging(value)
				Me.SendPropertyChanging
				Me._SEQNO = value
				Me.SendPropertyChanged("SEQNO")
				Me.OnSEQNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSYSGROUP", DbType:="Int NOT NULL")>  _
	Public Property IDSYSGROUP() As Integer
		Get
			Return Me._IDSYSGROUP
		End Get
		Set
			If ((Me._IDSYSGROUP = value)  _
						= false) Then
				Me.OnIDSYSGROUPChanging(value)
				Me.SendPropertyChanging
				Me._IDSYSGROUP = value
				Me.SendPropertyChanged("IDSYSGROUP")
				Me.OnIDSYSGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSYSBLG", DbType:="Int NOT NULL")>  _
	Public Property IDSYSBLG() As Integer
		Get
			Return Me._IDSYSBLG
		End Get
		Set
			If ((Me._IDSYSBLG = value)  _
						= false) Then
				Me.OnIDSYSBLGChanging(value)
				Me.SendPropertyChanging
				Me._IDSYSBLG = value
				Me.SendPropertyChanged("IDSYSBLG")
				Me.OnIDSYSBLGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTENTRY", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property DTENTRY() As String
		Get
			Return Me._DTENTRY
		End Get
		Set
			If (String.Equals(Me._DTENTRY, value) = false) Then
				Me.OnDTENTRYChanging(value)
				Me.SendPropertyChanging
				Me._DTENTRY = value
				Me.SendPropertyChanged("DTENTRY")
				Me.OnDTENTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPORGACOND", DbType:="Int NOT NULL")>  _
	Public Property TPORGACOND() As Integer
		Get
			Return Me._TPORGACOND
		End Get
		Set
			If ((Me._TPORGACOND = value)  _
						= false) Then
				Me.OnTPORGACONDChanging(value)
				Me.SendPropertyChanging
				Me._TPORGACOND = value
				Me.SendPropertyChanged("TPORGACOND")
				Me.OnTPORGACONDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPEMP", DbType:="NVarChar(50)")>  _
	Public Property TPEMP() As String
		Get
			Return Me._TPEMP
		End Get
		Set
			If (String.Equals(Me._TPEMP, value) = false) Then
				Me.OnTPEMPChanging(value)
				Me.SendPropertyChanging
				Me._TPEMP = value
				Me.SendPropertyChanged("TPEMP")
				Me.OnTPEMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FRMF1000_EGGA0013", Storage:="_FRMF1000", ThisKey:="IDFRM", OtherKey:="IDFRM", IsForeignKey:=true)>  _
	Public Property FRMF1000() As FRMF1000
		Get
			Return Me._FRMF1000.Entity
		End Get
		Set
			Dim previousValue As FRMF1000 = Me._FRMF1000.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FRMF1000.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FRMF1000.Entity = Nothing
					previousValue.EGGA0013 = Nothing
				End If
				Me._FRMF1000.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EGGA0013 = Me
					Me._IDFRM = value.IDFRM
				Else
					Me._IDFRM = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("FRMF1000")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
